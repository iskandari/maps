{"version":3,"file":"index.js","sources":["../src/mapbox.js","../src/webgl2-compat.js","../src/regl.js","../src/region/context.js","../src/loading/context.js","../src/loading/loading-updater.js","../src/map.js","../src/region/region-picker/circle-picker/utils.js","../src/region/region-picker/circle-picker/cursor-manager.js","../src/region/region-picker/circle-picker/circle-renderer.js","../src/region/region-picker/circle-picker/index.js","../src/region/region-picker/index.js","../src/use-recenter-region.js","../src/use-controls.js","../src/shaders.js","../src/utils.js","../src/constants.js","../src/tile.js","../src/initialize-store.js","../src/tiles.js","../src/raster.js","../src/line.js","../src/fill.js","../src/use-ruler.js"],"sourcesContent":["import React, {\n  createContext,\n  useState,\n  useRef,\n  useCallback,\n  useEffect,\n  useContext,\n} from 'react'\nimport mapboxgl from 'mapbox-gl'\n\nexport const MapboxContext = createContext(null)\n\nexport const useMapbox = () => {\n  return useContext(MapboxContext)\n}\n\nconst Mapbox = ({\n  glyphs,\n  style,\n  viewState, // Accept viewState\n  center,\n  zoom,\n  minZoom,\n  maxZoom,\n  maxBounds,\n  debug,\n  children,\n  mapRef,\n  onMove,\n  onMoveStart,\n  onMoveEnd,\n  onViewStateChange,\n}) => {\n  const map = useRef(null)\n  const [ready, setReady] = useState(false)\n\n  // Refs to store event handler functions for cleanup\n  const onViewStateChangeHandlerRef = useRef(null)\n\n  // Initialize the map instance\n  const initializeMap = useCallback(\n    (node) => {\n      if (node !== null && !map.current) {\n        const mapboxStyle = { version: 8, sources: {}, layers: [] }\n        if (glyphs) {\n          mapboxStyle.glyphs = glyphs\n        }\n\n        if (!viewState) {\n          console.error('viewState is undefined in Mapbox component');\n          return null; // or render a fallback UI\n        }\n\n        const { longitude, latitude, zoom, bearing, pitch } = viewState\n\n        map.current = new mapboxgl.Map({\n          container: node,\n          style: mapboxStyle,\n          center: [longitude, latitude],\n          zoom: zoom,\n          bearing: bearing,\n          pitch: pitch,\n          minZoom: minZoom,\n          maxZoom: maxZoom,\n          maxBounds: maxBounds,\n          dragRotate: false,\n          pitchWithRotate: false,\n          touchZoomRotate: true,\n        })\n\n        // Disable unwanted interactions\n        map.current.touchZoomRotate.disableRotation()\n        map.current.touchPitch.disable()\n\n        // Set debug options\n        map.current.showTileBoundaries = debug\n\n        // Expose the map instance via mapRef\n        if (mapRef) {\n          mapRef.current = map.current\n        }\n\n        // Set up event listeners\n        if (onMove) {\n          map.current.on('move', () => {\n            console.log('inside mapbox', 'moved')\n            onMove();\n          })\n        }\n        if (onMoveStart) {\n          map.current.on('movestart', onMoveStart)\n        }\n        if (onMoveEnd) {\n          map.current.on('moveend', onMoveEnd)\n        }\n        if (onViewStateChange) {\n          const handler = () => {\n            const { lng, lat } = map.current.getCenter()\n            const zoom = map.current.getZoom()\n            const bearing = map.current.getBearing()\n            const pitch = map.current.getPitch()\n            onViewStateChange({\n              longitude: lng,\n              latitude: lat,\n              zoom,\n              bearing,\n              pitch,\n            })\n          }\n          map.current.on('move', handler)\n          onViewStateChangeHandlerRef.current = handler\n        }\n\n        map.current.on('styledata', () => {\n          setReady(true)\n        })\n      }\n    },\n    [\n      glyphs,\n      center,\n      zoom,\n      minZoom,\n      maxZoom,\n      maxBounds,\n      debug,\n      mapRef,\n      onMove,\n      onMoveStart,\n      onMoveEnd,\n      onViewStateChange,\n      viewState, // Add viewState to dependencies\n    ]\n  )\n\n    // Update the map when viewState changes\n    useEffect(() => {\n      if (map.current && viewState) {\n        const { longitude, latitude, zoom, bearing, pitch } = viewState\n        map.current.jumpTo({\n          center: [longitude, latitude],\n          zoom: zoom,\n          bearing: bearing,\n          pitch: pitch,\n        })\n      }\n    }, [viewState])\n    \n  useEffect(() => {\n    return () => {\n      if (map.current) {\n        // Remove event listeners\n        if (onMove) {\n          map.current.off('move', onMove)\n        }\n        if (onMoveStart) {\n          map.current.off('movestart', onMoveStart)\n        }\n        if (onMoveEnd) {\n          map.current.off('moveend', onMoveEnd)\n        }\n        if (onViewStateChange && onViewStateChangeHandlerRef.current) {\n          map.current.off('move', onViewStateChangeHandlerRef.current)\n          onViewStateChangeHandlerRef.current = null\n        }\n\n        // Remove the map instance\n        map.current.remove()\n        map.current = null\n        setReady(false)\n      }\n    }\n  }, [onMove, onMoveStart, onMoveEnd, onViewStateChange])\n\n  // Update debug settings if `debug` prop changes\n  useEffect(() => {\n    if (map.current) {\n      map.current.showTileBoundaries = debug\n    }\n  }, [debug])\n\n  return (\n    <MapboxContext.Provider value={{ map: map.current }}>\n      <div\n        style={{\n          top: '0px',\n          bottom: '0px',\n          position: 'absolute',\n          width: '100%',\n          ...style,\n        }}\n        ref={initializeMap}\n      />\n      {ready && children}\n    </MapboxContext.Provider>\n  )\n}\n\nexport default Mapbox\n","// Compatability layer to make regl work with webgl2.\n// See https://github.com/regl-project/regl/issues/561\nvar GL_DEPTH_COMPONENT = 0x1902\nvar GL_DEPTH_STENCIL = 0x84f9\nvar HALF_FLOAT_OES = 0x8d61\n\n// webgl1 extensions natively supported by webgl2\nvar gl2Extensions = {\n  WEBGL_depth_texture: {\n    UNSIGNED_INT_24_8_WEBGL: 0x84fa,\n  },\n  OES_element_index_uint: {},\n  OES_texture_float: {},\n  // 'OES_texture_float_linear': {},\n  OES_texture_half_float: {\n    HALF_FLOAT_OES: HALF_FLOAT_OES,\n  },\n  // 'OES_texture_half_float_linear': {},\n  EXT_color_buffer_float: {},\n  OES_standard_derivatives: {},\n  EXT_frag_depth: {},\n  EXT_blend_minmax: {\n    MIN_EXT: 0x8007,\n    MAX_EXT: 0x8008,\n  },\n  EXT_shader_texture_lod: {},\n}\n\nvar extensions = {}\nexport const webgl2Compat = {\n  overrideContextType: function (callback) {\n    const webgl2 = this\n    // Monkey-patch context creation to override the context type.\n    const origGetContext = HTMLCanvasElement.prototype.getContext\n    HTMLCanvasElement.prototype.getContext = function (\n      ignoredContextType,\n      contextAttributes\n    ) {\n      return webgl2.wrapGLContext(\n        origGetContext.bind(this)('webgl2', contextAttributes),\n        extensions\n      )\n    }\n    // Execute the callback with overridden context type.\n    var rv = callback()\n\n    // Restore the original method.\n    HTMLCanvasElement.prototype.getContext = origGetContext\n    return rv\n  },\n\n  // webgl1 extensions natively supported by webgl2\n  // this is called when initializing regl context\n  wrapGLContext: function (gl, extensions) {\n    gl[this.versionProperty] = 2\n    for (var p in gl2Extensions) {\n      extensions[p.toLowerCase()] = gl2Extensions[p]\n    }\n\n    // to support float and half-float textures\n    gl.getExtension('EXT_color_buffer_float')\n\n    // Now override getExtension to return ours.\n    const origGetExtension = gl.getExtension\n    gl.getExtension = function (n) {\n      return extensions[n.toLowerCase()] || origGetExtension.apply(gl, [n])\n    }\n\n    // And texImage2D to handle format conversion\n    const origTexImage = gl.texImage2D\n    gl.texImage2D = function (\n      target,\n      miplevel,\n      iformat,\n      a,\n      typeFor6,\n      c,\n      d,\n      typeFor9,\n      f\n    ) {\n      const getInternalFormat =\n        webgl2Compat.getInternalFormat.bind(webgl2Compat)\n      const getFormat = webgl2Compat.getFormat.bind(webgl2Compat)\n      const getTextureType = webgl2Compat.getTextureType.bind(webgl2Compat)\n\n      if (arguments.length == 6) {\n        var ifmt = getInternalFormat(gl, iformat, typeFor6)\n        var fmt = getFormat(gl, iformat)\n        origTexImage.call(\n          gl,\n          target,\n          miplevel,\n          ifmt,\n          a,\n          fmt,\n          getTextureType(gl, typeFor6),\n          c\n        )\n      } else if (arguments.length == 9) {\n        var ifmt = getInternalFormat(gl, iformat, typeFor9)\n        var fmt = getFormat(gl, iformat)\n        var type = getTextureType(gl, typeFor9)\n\n        // Ensure 'f' is an ArrayBufferView\n        if (!(f instanceof ArrayBuffer || ArrayBuffer.isView(f))) {\n          let typedArray\n          switch (type) {\n            case gl.FLOAT:\n              typedArray = new Float32Array(f)\n              break\n            case gl.UNSIGNED_BYTE:\n              typedArray = new Uint8Array(f)\n              break\n            case gl.UNSIGNED_SHORT:\n              typedArray = new Uint16Array(f)\n              break\n            // Add more cases as needed\n            default:\n              throw new Error(`Unsupported type: ${type}`)\n          }\n          f = typedArray\n        }\n\n        // Corrected argument list without the extra 'd'\n        origTexImage.call(\n          gl,\n          target,\n          miplevel,\n          ifmt,\n          a,\n          typeFor6,\n          c,\n          fmt,\n          type,\n          f\n        )\n      } else {\n        throw new Error('Unsupported number of arguments to texImage2D')\n      }\n    }\n\n    // mocks of draw buffers's functions\n    extensions['webgl_draw_buffers'] = {\n      drawBuffersWEBGL: function () {\n        return gl.drawBuffers.apply(gl, arguments)\n      },\n    }\n\n    // mocks of vao extension\n    extensions['oes_vertex_array_object'] = {\n      VERTEX_ARRAY_BINDING_OES: 0x85b5,\n      createVertexArrayOES: function () {\n        return gl.createVertexArray()\n      },\n      deleteVertexArrayOES: function () {\n        return gl.deleteVertexArray.apply(gl, arguments)\n      },\n      isVertexArrayOES: function () {\n        return gl.isVertexArray.apply(gl, arguments)\n      },\n      bindVertexArrayOES: function () {\n        return gl.bindVertexArray.apply(gl, arguments)\n      },\n    }\n\n    // mocks of instancing extension\n    extensions['angle_instanced_arrays'] = {\n      VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: 0x88fe,\n      drawArraysInstancedANGLE: function () {\n        return gl.drawArraysInstanced.apply(gl, arguments)\n      },\n      drawElementsInstancedANGLE: function () {\n        return gl.drawElementsInstanced.apply(gl, arguments)\n      },\n      vertexAttribDivisorANGLE: function () {\n        return gl.vertexAttribDivisor.apply(gl, arguments)\n      },\n    }\n\n    return gl\n  },\n\n  versionProperty: '___regl_gl_version___',\n\n  // texture internal format to update on the fly\n  getInternalFormat: function (gl, format, type) {\n    if (gl[this.versionProperty] !== 2) {\n      return format\n    }\n    // WebGL2 texture formats\n    if (format === GL_DEPTH_COMPONENT) {\n      return gl.DEPTH_COMPONENT24\n    } else if (format === GL_DEPTH_STENCIL) {\n      return gl.DEPTH24_STENCIL8\n    } else if (type === HALF_FLOAT_OES && format === gl.RGBA) {\n      return gl.RGBA16F\n    } else if (type === HALF_FLOAT_OES && format === gl.RGB) {\n      return gl.RGB16F\n    } else if (type === gl.FLOAT && format === gl.RGBA) {\n      return gl.RGBA32F\n    } else if (type === gl.FLOAT && format === gl.RGB) {\n      return gl.RGB32F\n    } else if (format === gl.LUMINANCE && type === gl.FLOAT) {\n      return gl.R32F // Use R32F instead of LUMINANCE for float textures\n    } else if (format === gl.LUMINANCE) {\n      return gl.R8 // Use R8 instead of LUMINANCE for other types\n    }\n    return format\n  },\n\n  // texture type to update on the fly\n  getTextureType: function (gl, type) {\n    if (gl[this.versionProperty] !== 2) {\n      return type\n    }\n    if (type === HALF_FLOAT_OES) {\n      return gl.HALF_FLOAT\n    }\n    return type\n  },\n\n  // Add a new getFormat function\n  getFormat: function (gl, format) {\n    if (gl[this.versionProperty] !== 2) {\n      return format\n    }\n    if (format === gl.LUMINANCE) {\n      return gl.RED // Use RED instead of LUMINANCE in WebGL2\n    }\n    return format\n  },\n}\n\nexport default webgl2Compat\n","import React, {\n  createContext,\n  useCallback,\n  useState,\n  useEffect,\n  useContext,\n  useRef,\n} from 'react'\nimport _regl from 'regl'\n\nimport { webgl2Compat } from './webgl2-compat'\n\nexport const ReglContext = createContext(null)\n\nexport const useRegl = () => {\n  return useContext(ReglContext)\n}\n\nconst Regl = ({ style, extensions, children }) => {\n  const reglRef = useRef(null)\n  const [ready, setReady] = useState(false)\n\n  const ref = useCallback(\n    (node) => {\n      if (node !== null) {\n        const requiredExtensions = [\n          'OES_texture_float',\n          'OES_element_index_uint',\n          ...(extensions || []),\n        ]\n        try {\n          const canvas = document.createElement('canvas')\n          const context =\n            canvas.getContext('webgl') ||\n            canvas.getContext('experimental-webgl')\n          if (!context) {\n            throw new Error('WebGL is not supported in this browser.')\n          }\n          const missingExtensions = requiredExtensions.filter(\n            (ext) => !context.getExtension(ext)\n          )\n          canvas.remove()\n          if (missingExtensions.length > 0) {\n            // use webgl2 compat when missing extensions\n            console.log(\n              'using webgl2 compat due to missing extensions: ',\n              missingExtensions\n            )\n            reglRef.current = webgl2Compat.overrideContextType(() =>\n              _regl({\n                container: node,\n                extensions: requiredExtensions,\n              })\n            )\n          } else {\n            reglRef.current = _regl({\n              container: node,\n              extensions: requiredExtensions,\n            })\n          }\n          setReady(true)\n        } catch (err) {\n          console.error('Error initializing regl:', err)\n          throw err\n        }\n      }\n    },\n    [extensions]\n  )\n\n  useEffect(() => {\n    return () => {\n      if (reglRef.current) {\n        reglRef.current.destroy()\n        reglRef.current = null\n      }\n      setReady(false)\n    }\n  }, [])\n\n  return (\n    <ReglContext.Provider\n      value={{\n        regl: reglRef.current,\n      }}\n    >\n      <div ref={ref} style={{ width: '100%', height: '100%', ...style }} />\n      {ready && children}\n    </ReglContext.Provider>\n  )\n}\n\nexport default Regl\n","import React, { createContext, useContext, useState } from 'react'\n\nconst RegionContext = createContext({\n  region: null,\n  onChange: () => {\n    throw new Error('Tried to set region before initializing context')\n  },\n})\n\nexport const useRegionContext = () => {\n  return useContext(RegionContext)\n}\n\nexport const useRegion = () => {\n  const { region } = useContext(RegionContext)\n  return { region }\n}\n\nexport const RegionProvider = ({ children }) => {\n  const [region, setRegion] = useState(null)\n\n  return (\n    <RegionContext.Provider value={{ region, setRegion }}>\n      {children}\n    </RegionContext.Provider>\n  )\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst LoadingContext = createContext({})\n\nexport const useSetLoading = () => {\n  const loadingId = useRef(uuidv4())\n  const loading = useRef(false)\n  const { dispatch } = useContext(LoadingContext)\n  const [metadataIds, setMetadataIds] = useState(new Set())\n  const [chunkIds, setChunkIds] = useState(new Set())\n\n  useEffect(() => {\n    return () => {\n      const loaders = [{ id: loadingId.current, key: 'loading' }]\n      metadataIds.forEach((id) => loaders.push({ id, key: 'metadata' }))\n      chunkIds.forEach((id) => loaders.push({ id, key: 'chunk' }))\n      dispatch({ loaders, type: 'clear' })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (loading.current && metadataIds.size === 0 && chunkIds.size === 0) {\n      dispatch({\n        loaders: [{ id: loadingId.current, key: 'loading' }],\n        type: 'clear',\n      })\n      loading.current = false\n    }\n  }, [metadataIds.size, chunkIds.size, loading.current])\n\n  const setLoading = useCallback((key = 'chunk') => {\n    if (!['chunk', 'metadata'].includes(key)) {\n      throw new Error(\n        `Unexpected loading key: ${key}. Expected one of: 'chunk', 'metadata'.`\n      )\n    }\n\n    const id = uuidv4()\n    const setter = key === 'metadata' ? setMetadataIds : setChunkIds\n    setter((prev) => {\n      prev.add(id)\n      return prev\n    })\n\n    const loaders = [{ id, key }]\n\n    if (!loading.current) {\n      loaders.push({ id: loadingId.current, key: 'loading' })\n      loading.current = true\n    }\n    dispatch({ loaders, type: 'set' })\n    return id\n  }, [])\n\n  const clearLoading = useCallback((id, { forceClear } = {}) => {\n    if (id) {\n      setMetadataIds((prevMetadata) => {\n        prevMetadata.delete(id)\n        return prevMetadata\n      })\n      setChunkIds((prevChunk) => {\n        prevChunk.delete(id)\n        return prevChunk\n      })\n\n      dispatch({\n        loaders: [\n          { id, key: 'metadata' },\n          { id, key: 'chunk' },\n        ],\n        type: 'clear',\n      })\n    }\n\n    if (forceClear && loading.current) {\n      dispatch({\n        loaders: [{ id: loadingId.current, key: 'loading' }],\n        type: 'clear',\n      })\n      loading.current = false\n    }\n  }, [])\n\n  return {\n    setLoading,\n    clearLoading,\n    loading: loading.current,\n    metadataLoading: metadataIds.size > 0,\n    chunkLoading: chunkIds.size > 0,\n  }\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'set':\n      action.loaders.forEach(({ id, key }) => {\n        state[key].add(id)\n      })\n\n      return { ...state }\n    case 'clear':\n      action.loaders.forEach(({ id, key }) => {\n        state[key].delete(id)\n      })\n\n      return { ...state }\n    default:\n      throw new Error(`Unexpected action: ${action.type}`)\n  }\n}\n\nexport const LoadingProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    loading: new Set(),\n    metadata: new Set(),\n    chunk: new Set(),\n  })\n\n  return (\n    <LoadingContext.Provider\n      value={{\n        ...state,\n        dispatch,\n      }}\n    >\n      {children}\n    </LoadingContext.Provider>\n  )\n}\n\nexport const useLoadingContext = () => {\n  const { loading, metadata, chunk } = useContext(LoadingContext)\n\n  return {\n    loading: loading.size > 0,\n    metadataLoading: metadata.size > 0,\n    chunkLoading: chunk.size > 0,\n  }\n}\n","import { useEffect } from 'react'\n\nimport { useLoadingContext } from './context'\n\nexport const LoadingUpdater = ({\n  setLoading,\n  setMetadataLoading,\n  setChunkLoading,\n}) => {\n  const { loading, metadataLoading, chunkLoading } = useLoadingContext()\n\n  useEffect(() => {\n    if (setLoading) {\n      setLoading(loading)\n    }\n  }, [!!setLoading, loading])\n\n  useEffect(() => {\n    if (setMetadataLoading) {\n      setMetadataLoading(metadataLoading)\n    }\n  }, [!!setMetadataLoading, metadataLoading])\n\n  useEffect(() => {\n    if (setChunkLoading) {\n      setChunkLoading(chunkLoading)\n    }\n  }, [!!setChunkLoading, chunkLoading])\n\n  return null\n}\n","import React from 'react'\nimport Mapbox from './mapbox'\nimport Regl from './regl'\nimport { RegionProvider } from './region/context'\nimport { LoadingProvider, LoadingUpdater } from './loading'\n\nconst Map = ({\n  id,\n  tabIndex,\n  className,\n  style,\n  viewState, // add viewState\n  zoom,\n  minZoom,\n  maxZoom,\n  maxBounds,\n  center,\n  debug,\n  extensions,\n  glyphs,\n  children,\n  /** Tracks *any* pending requests made by containing `Raster` layers */\n  setLoading,\n  /** Tracks any metadata and coordinate requests made on initialization by containing `Raster` layers */\n  setMetadataLoading,\n  /** Tracks any requests of new chunks by containing `Raster` layers */\n  setChunkLoading,\n  mapRef, // Add this line\n  onMove,\n  onMoveStart,\n  onMoveEnd,\n  onViewStateChange,\n}) => {\n  console.log('on move function', onMove);\n  return (\n    <div\n      id={id}\n      tabIndex={tabIndex}\n      className={className}\n      style={{\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        overflow: 'hidden',\n        ...style,\n      }}\n    >\n      <Mapbox\n        viewState={viewState}\n        zoom={zoom}\n        minZoom={minZoom}\n        maxZoom={maxZoom}\n        maxBounds={maxBounds}\n        center={center}\n        debug={debug}\n        glyphs={glyphs}\n        style={{ position: 'absolute' }}\n        mapRef={mapRef} // Pass mapRef to Mapbox\n        onMove={onMove} // Forward event handlers\n        onMoveStart={onMoveStart}\n        onMoveEnd={onMoveEnd}\n        onViewStateChange={onViewStateChange}\n      >\n        <Regl\n          extensions={extensions}\n          style={{\n            position: 'absolute',\n            pointerEvents: 'none',\n            zIndex: -1,\n          }}\n        >\n          <LoadingProvider>\n            <LoadingUpdater\n              setLoading={setLoading}\n              setMetadataLoading={setMetadataLoading}\n              setChunkLoading={setChunkLoading}\n            />\n            <RegionProvider>{children}</RegionProvider>\n          </LoadingProvider>\n        </Regl>\n      </Mapbox>\n    </div>\n  )\n}\n\nexport default Map\n","import { geoPath, geoTransform } from 'd3-geo'\nimport mapboxgl from 'mapbox-gl'\n\nexport const project = (map, coordinates, options = {}) => {\n  // Convert any LngLatLike to LngLat\n  const ll = mapboxgl.LngLat.convert(coordinates)\n\n  let result = map.project(ll)\n\n  // When present, use referencePoint to find closest renderable point\n  const { referencePoint } = options\n  if (referencePoint) {\n    const deltas = [-360, 360]\n    deltas.forEach((delta) => {\n      const alternate = map.project({ lat: ll.lat, lng: ll.lng + delta })\n      if (\n        Math.abs(alternate.x - referencePoint.x) <\n        Math.abs(result.x - referencePoint.x)\n      ) {\n        result = alternate\n      }\n    })\n  }\n\n  return result\n}\n\nexport function getPathMaker(map, options) {\n  const transform = geoTransform({\n    point: function (lng, lat) {\n      const point = project(map, [lng, lat], options)\n      this.stream.point(point.x, point.y)\n    },\n  })\n  return geoPath().projection(transform)\n}\n","export default function CursorManager(map) {\n  const canvas = map.getCanvas()\n  const originalStyle = canvas.style.cursor\n\n  let mouseState = {\n    onHandle: false,\n    draggingHandle: false,\n    onCircle: false,\n    draggingCircle: false,\n  }\n\n  return function setCursor(newState) {\n    mouseState = {\n      ...mouseState,\n      ...newState,\n    }\n\n    if (mouseState.onHandle || mouseState.draggingHandle)\n      canvas.style.cursor = 'ew-resize'\n    else if (mouseState.onCircle || mouseState.draggingCircle)\n      canvas.style.cursor = 'move'\n    else canvas.style.cursor = originalStyle\n  }\n}\n","import { select } from 'd3-selection'\nimport { FLOATING_HANDLE, SHOW_RADIUS_GUIDELINE } from '../constants'\nimport { getPathMaker, project } from './utils'\nimport {\n  area,\n  convertArea,\n  distance,\n  rewind,\n  rhumbDestination,\n  lineString,\n  lineIntersect,\n  circle as turfCircle,\n  point,\n} from '@turf/turf'\nimport CursorManager from './cursor-manager'\n\nconst POLES = [point([0, -90]), point([0, 90])]\nconst abbreviations = {\n  kilometers: 'km',\n  miles: 'mi',\n}\n\nexport default function CircleRenderer({\n  id,\n  map,\n  onIdle = (circle) => {},\n  onDrag = (circle) => {},\n  initialCenter = { lat: 0, lng: 0 },\n  initialRadius = 0,\n  maxRadius,\n  minRadius,\n  units,\n}) {\n  let circle = null\n  let center = initialCenter\n  let centerXY = project(map, center)\n  let radius = initialRadius\n\n  const svg = select(`#circle-picker-${id}`).style('pointer-events', 'none')\n  const svgCircle = select(`#circle-${id}`).style('pointer-events', 'all')\n  const svgCircleCutout = select(`#circle-cutout-${id}`)\n  const svgHandle = select(`#handle-${id}`).style('pointer-events', 'all')\n  const svgGuideline = select(`#radius-guideline-${id}`)\n  const svgRadiusTextContainer = select(`#radius-text-container-${id}`)\n  const svgRadiusText = select(`#radius-text-${id}`).attr('fill-opacity', 0)\n\n  let guidelineAngle = 90\n  if (!SHOW_RADIUS_GUIDELINE) {\n    svgGuideline.style('display', 'none')\n    svgRadiusTextContainer.style('display', 'none')\n  }\n\n  const removers = []\n\n  //// LISTENERS ////\n\n  function addDragHandleListeners() {\n    const onMouseMove = (e) => {\n      let r = distance(\n        map.unproject(e.point).toArray(),\n        [center.lng, center.lat],\n        { units }\n      )\n      r = maxRadius ? Math.min(r, maxRadius) : r\n      r = minRadius ? Math.max(r, minRadius) : r\n      setRadius(r)\n      onDrag(circle)\n\n      if (FLOATING_HANDLE) {\n        const mouseXY = e.point\n        const rise = mouseXY.y - centerXY.y\n        const run = mouseXY.x - centerXY.x\n        let angle = (Math.atan(rise / run) * 180) / Math.PI\n        guidelineAngle = angle + 90 + (run < 0 ? 180 : 0)\n        setCircle()\n      }\n    }\n\n    const onMouseUp = () => {\n      onIdle(circle)\n      setCursor({ draggingHandle: false })\n      map.off('mousemove', onMouseMove)\n      map.off('touchmove', onMouseMove)\n      svgHandle.style('pointer-events', 'all')\n      svgCircle.style('pointer-events', 'all')\n      svgRadiusText.attr('fill-opacity', 0)\n      svgGuideline.attr('stroke-opacity', 0)\n    }\n\n    const handleStart = (e) => {\n      if (e.type === 'touchstart') {\n        map.dragPan.disable()\n        map.on('touchmove', onMouseMove)\n        map.once('touchend', onMouseUp)\n      } else {\n        map.on('mousemove', onMouseMove)\n        map.once('mouseup', onMouseUp)\n      }\n      setCursor({ draggingHandle: true })\n      svgHandle.style('pointer-events', 'none')\n      svgCircle.style('pointer-events', 'none')\n      svgRadiusText.attr('fill-opacity', 1)\n      svgGuideline.attr('stroke-opacity', 1)\n    }\n\n    svgHandle.on('mousedown', handleStart)\n    svgHandle.on('touchstart', handleStart)\n\n    removers.push(function removeDragHandleListeners() {\n      svgHandle.on('mousedown', null)\n      svgHandle.on('touchstart', null)\n    })\n  }\n\n  function addCircleListeners() {\n    let offset\n    const mapCanvas = map.getCanvas()\n\n    const onMouseMove = (e) => {\n      setCenter(\n        {\n          lng: e.lngLat.lng - offset.lng,\n          lat: e.lngLat.lat - offset.lat,\n        },\n        {\n          x: e.point.x,\n          y: e.point.y,\n        }\n      )\n      onDrag(circle)\n    }\n\n    const onMouseUp = () => {\n      onIdle(circle)\n      setCursor({ draggingCircle: false })\n      map.off('mousemove', onMouseMove)\n      map.off('touchmove', onMouseMove)\n      map.dragPan.enable()\n      svgCircle.style('pointer-events', 'all')\n      svgHandle.style('pointer-events', 'all')\n      svgCircle.attr('stroke-width', 1)\n    }\n\n    const handleCircleStart = (e) => {\n      let point\n      if (e.type === 'touchstart') {\n        const touch = e.touches[0]\n        point = { x: touch.pageX, y: touch.pageY }\n        svgCircle.attr('stroke-width', 4)\n        map.dragPan.disable()\n        map.on('touchmove', onMouseMove)\n        map.once('touchend', onMouseUp)\n      } else {\n        point = { x: e.offsetX, y: e.offsetY }\n        map.on('mousemove', onMouseMove)\n        map.once('mouseup', onMouseUp)\n      }\n      const lngLat = map.unproject(point)\n      offset = {\n        lng: lngLat.lng - center.lng,\n        lat: lngLat.lat - center.lat,\n      }\n      setCursor({ draggingCircle: true })\n      svgCircle.style('pointer-events', 'none')\n      svgHandle.style('pointer-events', 'none')\n    }\n\n    svgCircle.on('mousedown', handleCircleStart)\n    svgCircle.on('touchstart', handleCircleStart)\n\n    svgCircle.on('wheel', (e) => {\n      e.preventDefault()\n      let newEvent = new e.constructor(e.type, e)\n      mapCanvas.dispatchEvent(newEvent)\n    })\n\n    removers.push(function removeCircleListeners() {\n      svgCircle.on('mousedown', null)\n      svgCircle.on('touchstart', null)\n      svgCircle.on('wheel', null)\n    })\n  }\n\n  function addMapMoveListeners() {\n    const onMove = setCircle\n\n    map.on('move', onMove)\n    removers.push(function removeMapMoveListeners() {\n      map.off('move', onMove)\n    })\n  }\n\n  //// CIRCLE ////\n\n  function geoCircle(center, radius, inverted = false) {\n    const c = turfCircle([center.lng, center.lat], radius, {\n      units,\n      steps: 64,\n      properties: {\n        center,\n        radius,\n        units,\n      },\n    })\n\n    c.properties.area = convertArea(area(c), 'meters', units)\n    c.properties.zoom = map.getZoom()\n\n    if (inverted) {\n      return c\n    }\n\n    // need to rewind or svg fill is inside-out\n    return rewind(c, { reverse: true, mutate: true })\n  }\n\n  //// SETTERS ////\n\n  const setCursor = CursorManager(map)\n\n  function setCenter(_center, _point) {\n    if (_center && _center !== center) {\n      if (nearPoles(_center, radius)) {\n        center = { lng: _center.lng, lat: center.lat }\n        centerXY = { x: _point.x, y: centerXY.y }\n      } else {\n        center = _center\n        centerXY = _point\n      }\n\n      setCircle()\n    }\n  }\n\n  function resetCenterXY() {\n    // reset centerXY value based on latest `map` value\n    centerXY = project(map, center, { referencePoint: centerXY })\n  }\n\n  function setRadius(_radius) {\n    if (_radius && _radius !== radius) {\n      if (!nearPoles(center, _radius)) {\n        radius = _radius\n        setCircle()\n      }\n    }\n  }\n\n  function nearPoles(center, radius) {\n    const turfPoint = point([center.lng, center.lat])\n\n    return POLES.some((pole) => distance(turfPoint, pole, { units }) < radius)\n  }\n\n  function setCircle() {\n    // ensure that centerXY is up-to-date with map\n    resetCenterXY()\n\n    const makePath = getPathMaker(map, {\n      referencePoint: centerXY,\n    })\n\n    // update svg circle\n    circle = geoCircle(center, radius)\n    const path = makePath(circle)\n    svgCircle.attr('d', path)\n\n    // update cutout\n    const cutoutCircle = geoCircle(center, radius, true)\n    const cutoutPath = makePath(cutoutCircle)\n    const { width, height } = svg.node().getBBox()\n    svgCircleCutout.attr('d', cutoutPath + ` M0,0H${width}V${height}H0V0z`)\n\n    // update other svg elements\n    const handleXY = (() => {\n      // by default just render handle based on radius and guideline angle\n      let coordinates = rhumbDestination(\n        [center.lng, center.lat],\n        radius,\n        guidelineAngle\n      ).geometry.coordinates\n\n      const lineEnd = rhumbDestination(\n        [center.lng, center.lat],\n        radius * 2,\n        guidelineAngle\n      )\n      const line = lineString([\n        [center.lng, center.lat],\n        lineEnd.geometry.coordinates,\n      ])\n      const inter = lineIntersect(line, circle)\n      // but prefer rendering using intersection with circle to handle distortions near poles\n      if (inter.features.length > 0) {\n        coordinates = inter.features[0].geometry.coordinates\n      }\n\n      return project(map, coordinates, {\n        referencePoint: centerXY,\n      })\n    })()\n\n    svgHandle.attr('cx', handleXY.x).attr('cy', handleXY.y)\n\n    svgGuideline\n      .attr('x1', centerXY.x)\n      .attr('y1', centerXY.y)\n      .attr('x2', handleXY.x)\n      .attr('y2', handleXY.y)\n\n    const translateY = 4\n\n    svgRadiusText\n      .text(radius.toFixed(0) + abbreviations[units])\n      .attr(\n        'transform',\n        `rotate(${-1 * guidelineAngle + 90}) ` + `translate(0, ${translateY})`\n      )\n\n    const translateX = (() => {\n      const { width: textWidth } = svgRadiusText.node().getBBox()\n      const coeff = 0.8 * Math.sin((guidelineAngle * Math.PI) / 180)\n      return 18 + Math.abs((coeff * textWidth) / 2)\n    })()\n\n    svgRadiusTextContainer.attr(\n      'transform',\n      `rotate(${guidelineAngle - 90}, ${handleXY.x}, ${handleXY.y}) ` +\n        `translate(${handleXY.x + translateX}, ${handleXY.y})`\n    )\n  }\n\n  //// INIT ////\n\n  addDragHandleListeners()\n  addCircleListeners()\n  addMapMoveListeners()\n  setCircle()\n  onIdle(circle)\n\n  //// INTERFACE ////\n\n  return {\n    remove: () => {\n      removers.reverse().forEach((remove) => remove())\n      onIdle(null)\n    },\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useMapbox } from '../../../mapbox'\nimport CircleRenderer from './circle-renderer'\n\nconst CirclePicker = ({\n  id,\n  backgroundColor,\n  center,\n  color,\n  fontFamily,\n  fontSize,\n  radius,\n  onIdle,\n  onDrag,\n  units,\n  maxRadius,\n  minRadius,\n}) => {\n  const { map } = useMapbox()\n  const [renderer, setRenderer] = useState(null)\n\n  useEffect(() => {\n    const renderer = CircleRenderer({\n      id,\n      map,\n      onIdle,\n      onDrag,\n      initialCenter: center,\n      initialRadius: radius,\n      units,\n      maxRadius,\n      minRadius,\n    })\n\n    setRenderer(renderer)\n\n    return function cleanup() {\n      // need to check load state for fast-refresh purposes\n      if (map.loaded()) renderer.remove()\n    }\n  }, [])\n\n  return (\n    <svg\n      id={`circle-picker-${id}`}\n      style={{\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <defs>\n        <clipPath id={`circle-clip-${id}`}>\n          <path id={`circle-cutout-${id}`} />\n        </clipPath>\n      </defs>\n\n      <path\n        id={`circle-${id}`}\n        stroke={color}\n        strokeWidth={1}\n        fill='transparent'\n        cursor='move'\n      />\n      <rect\n        x='0'\n        y='0'\n        width='100%'\n        height='100%'\n        clipPath={`url(#circle-clip-${id})`}\n        fill={backgroundColor}\n        fillOpacity={0.8}\n      />\n      <circle id={`handle-${id}`} r={8} fill={color} cursor='ew-resize' />\n      <line\n        id={`radius-guideline-${id}`}\n        stroke={color}\n        strokeOpacity={0}\n        strokeWidth={1}\n        strokeDasharray='3,2'\n      />\n      <g id={`radius-text-container-${id}`}>\n        <text\n          id={`radius-text-${id}`}\n          textAnchor='middle'\n          fontFamily={fontFamily}\n          fontSize={fontSize}\n          fill={color}\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default CirclePicker\n","import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport CirclePicker from './circle-picker'\nimport { UPDATE_STATS_ON_DRAG } from './constants'\nimport { distance } from '@turf/turf'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { useRegionContext } from '../context'\nimport { useMapbox } from '../../mapbox'\nimport mapboxgl from 'mapbox-gl'\n\nfunction getInitialRadius(map, units, minRadius, maxRadius) {\n  const bounds = map.getBounds().toArray()\n  const dist = distance(bounds[0], bounds[1], { units })\n  let radius = Math.round(dist / 15)\n  radius = minRadius ? Math.max(minRadius, radius) : radius\n  radius = maxRadius ? Math.min(maxRadius, radius) : radius\n\n  return radius\n}\n\nfunction isValidCoordinate(longitude, latitude) {\n  return (\n    typeof longitude === 'number' &&\n    typeof latitude === 'number' &&\n    !isNaN(longitude) &&\n    !isNaN(latitude) &&\n    latitude >= -90 &&\n    latitude <= 90\n  )\n}\n\nfunction getInitialCenter(map, center) {\n  if (\n    Array.isArray(center) &&\n    center.length === 2 &&\n    isValidCoordinate(center[0], center[1])\n  ) {\n    return new mapboxgl.LngLat(center[0], center[1])\n  } else {\n    if (center) {\n      console.warn(\n        `Invalid initialCenter provided: ${center}. Should be [lng, lat]. Using map center instead.`\n      )\n    }\n    return map.getCenter()\n  }\n}\n\n// TODO:\n// - accept mode (only accept mode=\"circle\" to start)\nfunction RegionPicker({\n  backgroundColor,\n  color,\n  fontFamily,\n  fontSize,\n  units = 'kilometers',\n  initialRadius: initialRadiusProp,\n  initialCenter: initialCenterProp,\n  minRadius,\n  maxRadius,\n}) {\n  const { map } = useMapbox()\n  const id = useRef(uuidv4())\n\n  const initialCenter = useRef(getInitialCenter(map, initialCenterProp))\n\n  const initialRadius = useRef(\n    initialRadiusProp || getInitialRadius(map, units, minRadius, maxRadius)\n  )\n  const { setRegion } = useRegionContext()\n\n  const [center, setCenter] = useState(initialCenter.current)\n\n  useEffect(() => {\n    return () => {\n      // Clear region when unmounted\n      setRegion(null)\n    }\n  }, [])\n\n  const handleCircle = useCallback((circle) => {\n    if (!circle) return\n    setRegion(circle)\n    setCenter(circle.properties.center)\n  }, [])\n\n  // TODO: consider extending support for degrees and radians\n  if (!['kilometers', 'miles'].includes(units)) {\n    throw new Error('Units must be one of miles, kilometers')\n  }\n\n  return (\n    <CirclePicker\n      id={id.current}\n      map={map}\n      center={initialCenter.current}\n      radius={initialRadius.current}\n      onDrag={UPDATE_STATS_ON_DRAG ? handleCircle : undefined}\n      onIdle={handleCircle}\n      backgroundColor={backgroundColor}\n      color={color}\n      units={units}\n      fontFamily={fontFamily}\n      fontSize={fontSize}\n      maxRadius={maxRadius}\n      minRadius={minRadius}\n    />\n  )\n}\n\nexport default RegionPicker\n","import { useEffect, useState } from 'react'\n\nimport { useRegion } from './region/context'\nimport { useMapbox } from './mapbox'\n\nexport const useRecenterRegion = () => {\n  const [value, setValue] = useState({ recenterRegion: () => {} })\n  const { map } = useMapbox()\n  const { region } = useRegion()\n\n  const center = region?.properties?.center\n\n  useEffect(() => {\n    setValue({ recenterRegion: () => map.easeTo({ center }) })\n  }, [center])\n\n  return value\n}\n\nexport default useRecenterRegion\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { flushSync } from 'react-dom'\nimport { useMapbox } from './mapbox'\n\nexport const useControls = () => {\n  const { map } = useMapbox()\n  const [zoom, setZoom] = useState(map.getZoom())\n  const [center, setCenter] = useState(map.getCenter())\n\n  const updateControlsSync = useCallback(() => {\n    flushSync(() => {\n      setZoom(map.getZoom())\n      setCenter(map.getCenter())\n    })\n  }, [])\n\n  useEffect(() => {\n    map.on('move', updateControlsSync)\n    return () => {\n      map.off('move', updateControlsSync)\n    }\n  }, [map])\n\n  return { center: center, zoom: zoom }\n}\n","import { mercatorInvert } from 'glsl-geo-projection'\n\nconst _sh = (mode) => {\n  return (value, which) => {\n    if (which.includes(mode)) return value\n    return ''\n  }\n}\n\nexport const vert = (mode, vars) => {\n  const sh = _sh(mode)\n\n  return `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n  #define PI 3.1415926535897932384626433832795\n\n  attribute vec2 position;\n  ${sh(`varying vec2 uv;`, ['texture'])}\n  ${sh(vars.map((d) => `attribute float ${d};`).join(''), ['grid', 'dotgrid'])}\n  ${sh(vars.map((d) => `varying float ${d}v;`).join(''), ['grid', 'dotgrid'])}\n  uniform vec2 camera;\n  uniform float viewportWidth;\n  uniform float viewportHeight;\n  uniform float pixelRatio;\n  uniform float zoom;\n  uniform float size;\n  uniform float globalLevel;\n  uniform float level;\n  uniform vec2 offset;\n  uniform vec2 order;\n  uniform float projection;\n  varying float latBase;\n  float mercatorYFromLat(float phi)\n  {\n    return (PI - log(tan(PI / 4.0 - phi / 2.0))) / (2.0 * PI);\n  }\n\n  void main() {\n    float scale = pixelRatio * 512.0 / size;\n    float globalMag = pow(2.0, zoom - globalLevel);\n    float mag = pow(2.0, zoom - level);\n\n    vec2 tileOffset = mag * (position + offset * size);\n    vec2 cameraOffset = globalMag * camera * size;\n    vec2 scaleFactor = vec2(order.x / viewportWidth, -1.0 * order.y / viewportHeight) * scale * 2.0;\n\n    float x = scaleFactor.x * (tileOffset.x - cameraOffset.x);\n\n    float y;\n    // Equirectangular\n    if (projection == 1.0) {\n      float numTiles = pow(2.0, level);\n      float sizeRad = PI / numTiles;\n      float stepRad = sizeRad / size;  \n      float latRad = order.y * (PI / 2.0 - (offset.y * sizeRad + position.y * stepRad));\n\n      // (0 => 1)\n      float posY = clamp(mercatorYFromLat(latRad), 0.0, 1.0);\n      // (-0.5 => 0.5)\n      posY = posY - 0.5;\n\n      y = -1.0 * order.y * scaleFactor.y * (pow(2.0, zoom) * size * posY + (cameraOffset.y - globalMag * size * pow(2.0, globalLevel) * 0.5));\n\n      // values when position.y = 0\n      latBase = order.y * (PI / 2.0 - (offset.y * sizeRad));\n    } else {\n      y = scaleFactor.y * (tileOffset.y - cameraOffset.y);\n    }\n\n    ${sh(`uv = vec2(position.y, position.x) / size;`, ['texture'])}\n    ${sh(vars.map((d) => `${d}v = ${d};`).join(''), ['grid', 'dotgrid'])}\n    ${sh(`gl_PointSize = 0.9 * scale * mag;`, ['grid', 'dotgrid'])}\n    gl_Position = vec4(x, y, 0.0, 1.0);\n  }`\n}\n\nexport const frag = (mode, vars, customFrag, customUniforms) => {\n  const sh = _sh(mode)\n\n  const declarations = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n  uniform float opacity;\n  uniform sampler2D colormap;\n  uniform vec2 clim;\n  uniform float fillValue;\n  uniform float projection;\n  uniform float viewportHeight;\n  uniform float pixelRatio;\n  uniform float zoom;\n  uniform float level;\n  uniform float centerY;\n  uniform vec2 order;\n  varying float latBase;\n  ${sh(`varying vec2 uv;`, ['texture'])}\n  ${sh(vars.map((d) => `uniform sampler2D ${d};`).join(''), ['texture'])}\n  ${sh(vars.map((d) => `varying float ${d}v;`).join(''), ['grid', 'dotgrid'])}\n  ${customUniforms.map((d) => `uniform float ${d};`).join('')}\n  `\n\n  if (!customFrag)\n    return `\n    ${declarations}\n    ${mercatorInvert}\n    #define PI 3.1415926535897932384626433832795\n\n    void main() {\n      ${sh(\n        `\n      // By default (mercator projection), index into vars[0] using uv\n      vec2 coord = uv;\n\n      // Equirectangular\n      if (projection == 1.0) {\n        float scale = pixelRatio * 512.0;\n        float mag = pow(2.0, zoom);\n        float numTiles = pow(2.0, level);\n        float sizeRad = PI / numTiles;\n\n        // (1 => 0)\n        float y = gl_FragCoord.y / viewportHeight;\n        // (1 => 0)\n        float delta = 1.0 - centerY;\n        float mercatorY = viewportHeight * (y - 0.5) / (scale * mag) + delta;\n        vec2 lookup = mercatorInvert((uv.y * 2.0 - 1.0) * PI, (mercatorY * 2.0 - 1.0) * PI);\n        float rescaledX = lookup.x / 360.0 + 0.5;\n        float rescaledY = order.y * (latBase - radians(lookup.y)) / sizeRad;\n\n        coord = vec2(rescaledY, rescaledX);\n      }\n\n      float ${vars[0]} = texture2D(${vars[0]}, coord).x;\n      `,\n        ['texture']\n      )}\n      ${sh(`float ${vars[0]} = ${vars[0]}v;`, ['grid', 'dotgrid'])}\n      ${sh(\n        `\n      if (length(gl_PointCoord.xy - 0.5) > 0.5) {\n        discard;\n      }\n      `,\n        ['dotgrid']\n      )}\n      if (${vars[0]} == fillValue) {\n        discard;\n      }\n      float rescaled = (${vars[0]} - clim.x)/(clim.y - clim.x);\n      vec4 c = texture2D(colormap, vec2(rescaled, 1.0));\n      gl_FragColor = vec4(c.x, c.y, c.z, opacity);\n      gl_FragColor.rgb *= gl_FragColor.a;\n    }`\n\n  if (customFrag)\n    return `\n    ${declarations}\n    void main() {\n      ${sh(\n        `${vars.map((d) => `float ${d} = texture2D(${d}, uv).x;`).join('')}`,\n        ['texture']\n      )}\n      ${sh(`${vars.map((d) => `float ${d} = ${d}v;`).join('')}`, [\n        'grid',\n        'dotgrid',\n      ])}\n      ${customFrag}\n    }`\n}\n","import { point, rhumbBearing, rhumbDestination } from '@turf/turf'\n\nconst d2r = Math.PI / 180\n\nconst clip = (v, max) => {\n  let result\n  if (v < 0) {\n    result = v + max + 1\n  } else if (v > max) {\n    result = v - max - 1\n  } else {\n    result = v\n  }\n\n  return Math.min(Math.max(result, 0), max)\n}\n\nexport const keyToTile = (key) => {\n  return key.split(',').map((d) => parseInt(d))\n}\n\nexport const tileToKey = (tile) => {\n  return tile.join(',')\n}\n\nexport const pointToTile = (lon, lat, z, projection, order) => {\n  const z2 = Math.pow(2, z)\n\n  let tile\n  switch (projection) {\n    case 'mercator':\n      tile = pointToCamera(lon, lat, z, projection)\n      break\n    case 'equirectangular':\n      let x = z2 * (lon / 360 + 0.5)\n      let y = z2 * ((order[1] * -1 * lat) / 180 + 0.5)\n\n      x = x % z2\n      if (x < 0) x = x + z2\n      y = Math.max(Math.min(y, z2), 0)\n      tile = [x, y, z]\n      break\n    default:\n      return\n  }\n  tile[0] = Math.floor(tile[0])\n  tile[1] = Math.min(Math.floor(tile[1]), z2 - 1)\n\n  return tile\n}\n\nexport const pointToCamera = (lon, lat, z) => {\n  const sin = Math.sin(lat * d2r)\n  const z2 = Math.pow(2, z)\n\n  let x = z2 * (lon / 360 + 0.5)\n  let y = z2 * (0.5 - (0.25 * Math.log((1 + sin) / (1 - sin))) / Math.PI)\n\n  x = x % z2\n  y = Math.max(Math.min(y, z2), 0)\n  if (x < 0) x = x + z2\n  return [x, y, z]\n}\n\nexport const cameraToPoint = (x, y, z) => {\n  const z2 = Math.pow(2, z)\n\n  const lon = 360 * (x / z2) - 180\n\n  const y2 = 180 - (y / z2) * 360\n  const lat = (360 / Math.PI) * Math.atan(Math.exp((y2 * Math.PI) / 180)) - 90\n\n  return [lon, lat]\n}\n\nexport const zoomToLevel = (zoom, maxZoom) => {\n  if (maxZoom) return Math.min(Math.max(0, Math.floor(zoom)), maxZoom)\n  return Math.max(0, Math.floor(zoom))\n}\n\nexport const mercatorYFromLat = (lat) => {\n  return (\n    (180 -\n      (180 / Math.PI) *\n        Math.log(Math.tan(Math.PI / 4 + (lat * Math.PI) / 360))) /\n    360\n  )\n}\n\nconst getOffsets = (length, tileSize, cameraOffset, order) => {\n  const siblingCount = (length - tileSize) / tileSize\n\n  // Do not add offset for very small fraction of tile\n  if (Math.abs(siblingCount) < 0.001) {\n    return [0, 0]\n  }\n\n  const prev = siblingCount / 2 + 0.5 - cameraOffset\n  const next = siblingCount - prev\n\n  let result = [-1 * Math.ceil(prev), Math.ceil(next)]\n  if (order === -1) {\n    result = [-1 * Math.ceil(next), Math.ceil(prev)]\n  }\n  return result\n}\n\nconst getTileOffsets = (length, tileSize, camera, order) => {\n  const cameraOffset = camera - Math.floor(camera)\n\n  return getOffsets(length, tileSize, cameraOffset, order)\n}\n\nconst getLatBasedOffsets = (tile, { zoom, length, order, camera }) => {\n  const [x, y, z] = tile\n  const z2 = Math.pow(2, z)\n  const sizeDeg = 180 / z2\n\n  const lat0 = order * (90 - y * sizeDeg)\n  const lat1 = lat0 - order * sizeDeg\n\n  const y0 = Math.max(Math.min(mercatorYFromLat(lat0), 1), 0)\n  const y1 = Math.max(Math.min(mercatorYFromLat(lat1), 1), 0)\n\n  const magnification = Math.pow(2, zoom - z)\n  const scale = window.devicePixelRatio * 512 * magnification\n  const tileSize = Math.abs(y1 - y0) * scale\n\n  const cameraOffset = camera - Math.pow(2, z) * (order === 1 ? y0 : y1)\n\n  return getOffsets(length, tileSize, cameraOffset, order)\n}\n\n// Given a tile, return an object mapping sibling tiles (including itself) mapped to the different locations to render\n// For example, { '0.0.0':  [ [0,0,0], [1,0,0] ] }\nexport const getSiblings = (\n  tile,\n  { viewport, zoom, size, camera, order, projection }\n) => {\n  const [tileX, tileY, tileZ] = tile\n  const { viewportHeight, viewportWidth } = viewport\n  const [cameraX, cameraY] = camera\n\n  const magnification = Math.pow(2, zoom - tileZ)\n  const scale = window.devicePixelRatio * 512 * magnification\n\n  const deltaX = getTileOffsets(viewportWidth, scale, cameraX, order[0])\n  const deltaY =\n    projection === 'equirectangular'\n      ? getLatBasedOffsets(tile, {\n          zoom,\n          length: viewportHeight,\n          order: order[1],\n          camera: cameraY,\n        })\n      : getTileOffsets(viewportHeight, scale, cameraY, order[1])\n\n  // offsets in units of tiles\n  let offsets = []\n  for (let x = deltaX[0]; x <= deltaX[1]; x++) {\n    for (let y = deltaY[0]; y <= deltaY[1]; y++) {\n      offsets.push([tileX + x, tileY + y, tileZ])\n    }\n  }\n\n  const max = Math.pow(2, tileZ) - 1\n  return offsets.reduce((accum, offset) => {\n    const [x, y, z] = offset\n\n    // Do not attempt to wrap in y direction\n    if (y < 0 || y > max) {\n      return accum\n    }\n    const tile = [clip(x, max), clip(y, max), z]\n    const key = tileToKey(tile)\n\n    if (!accum[key]) {\n      accum[key] = []\n    }\n\n    accum[key].push(offset)\n\n    return accum\n  }, {})\n}\n\nexport const getKeysToRender = (targetKey, tiles, maxZoom) => {\n  const ancestor = getAncestorToRender(targetKey, tiles)\n\n  if (ancestor) {\n    return [ancestor]\n  }\n\n  const descendants = getDescendantsToRender(targetKey, tiles, maxZoom)\n  if (descendants.length) {\n    return descendants\n  }\n\n  return [targetKey]\n}\n\nexport const getAncestorToRender = (targetKey, tiles) => {\n  let [x, y, z] = keyToTile(targetKey)\n  while (z >= 0) {\n    const key = tileToKey([x, y, z])\n    if (tiles[key].isBufferPopulated()) {\n      return key\n    }\n    z--\n    x = Math.floor(x / 2)\n    y = Math.floor(y / 2)\n  }\n}\n\nexport const getDescendantsToRender = (targetKey, tiles, maxZoom) => {\n  let [initialX, initialY, initialZ] = keyToTile(targetKey)\n  let [x, y, z] = [initialX, initialY, initialZ]\n  let coverage = 0\n  let descendants = []\n  while (z <= maxZoom) {\n    const delta = z - initialZ\n    const keys = []\n    for (let deltaX = 0; deltaX <= delta; deltaX++) {\n      for (let deltaY = 0; deltaY <= delta; deltaY++) {\n        keys.push(tileToKey([x + deltaX, y + deltaY, z]))\n      }\n    }\n\n    const coveringKeys = keys.filter((key) => tiles[key].isBufferPopulated())\n    const currentCoverage = coveringKeys.length / keys.length\n\n    if (coverage === 1) {\n      return keys\n    } else if (currentCoverage > coverage) {\n      descendants = keys\n    }\n\n    z++\n    x = x * 2\n    y = y * 2\n  }\n\n  return descendants\n}\n\nexport const getOverlappingAncestor = (key, renderedKeys) => {\n  const [aX, aY, aZ] = keyToTile(key)\n  const child = { x: aX, y: aY, z: aZ }\n\n  return renderedKeys.find((parentKey) => {\n    const [bX, bY, bZ] = keyToTile(parentKey)\n    const parent = { x: bX, y: bY, z: bZ }\n\n    if (child.z <= parent.z) {\n      return false\n    } else {\n      const factor = Math.pow(2, child.z - parent.z)\n\n      return (\n        Math.floor(child.x / factor) === parent.x &&\n        Math.floor(child.y / factor) === parent.y\n      )\n    }\n  })\n}\n\n// Given a `renderedKey` for a tile to be rendered at some offset on the map,\n// return offset for rendering in context of map\nexport const getAdjustedOffset = (offset, renderedKey) => {\n  const [renderedX, renderedY, renderedLevel] = keyToTile(renderedKey)\n  const [offsetX, offsetY, level] = offset\n\n  // Overall factor to scale offset by\n  const factor = Math.pow(2, level - renderedLevel)\n\n  // Factor used to calculate adjustment when rendering a descendant tile\n  const descendantFactor =\n    renderedLevel > level ? Math.pow(2, renderedLevel - level) : 1\n\n  return [\n    Math.floor(offsetX / factor) + (renderedX % descendantFactor),\n    Math.floor(offsetY / factor) + (renderedY % descendantFactor),\n  ]\n}\n\nexport const getTilesOfRegion = (region, level, projection, order) => {\n  const { center, radius, units } = region.properties\n  const centralTile = pointToTile(\n    center.lng,\n    center.lat,\n    level,\n    projection,\n    order\n  )\n\n  const tiles = new Set([tileToKey(centralTile)])\n\n  region.geometry.coordinates[0].forEach(([lng, lat]) => {\n    // Add tile along edge of region\n    const edgeTile = pointToTile(lng, lat, level, projection, order)\n    tiles.add(tileToKey(edgeTile))\n\n    // Add any intermediate tiles if edge is > 1 tile away from center\n    const maxDiff = Math.max(\n      Math.abs(edgeTile[0] - centralTile[0]),\n      Math.abs(edgeTile[1] - centralTile[1])\n    )\n    if (maxDiff > 1) {\n      const centerPoint = point([center.lng, center.lat])\n      const bearing = rhumbBearing(centerPoint, point([lng, lat]))\n\n      for (let i = 1; i < maxDiff; i++) {\n        const intermediatePoint = rhumbDestination(\n          centerPoint,\n          (i * radius) / maxDiff,\n          bearing,\n          { units }\n        )\n        const intermediateTile = pointToTile(\n          intermediatePoint.geometry.coordinates[0],\n          intermediatePoint.geometry.coordinates[1],\n          level,\n          projection,\n          order\n        )\n        tiles.add(tileToKey(intermediateTile))\n      }\n    }\n  })\n\n  return Array.from(tiles)\n}\n\nexport const getPyramidMetadata = (multiscales) => {\n  if (!multiscales) {\n    throw new Error(\n      'Missing `multiscales` value in metadata. Please check your pyramid generation code.'\n    )\n  }\n\n  const datasets = multiscales[0].datasets\n\n  if (!datasets || datasets.length === 0) {\n    throw new Error(\n      'No datasets provided in `multiscales` metadata. Please check your pyramid generation code.'\n    )\n  }\n\n  const levels = datasets.map((dataset) => Number(dataset.path))\n  const maxZoom = Math.max(...levels)\n  const tileSize = datasets[0].pixels_per_tile\n  let crs = datasets[0].crs\n\n  if (!tileSize) {\n    throw new Error(\n      'Missing required `pixels_per_tile` value in `multiscales` metadata. Please check your pyramid generation code.'\n    )\n  }\n\n  if (!crs) {\n    console.warn(\n      'Missing `crs` value in `multiscales` metadata. Please check your pyramid generation code. Falling back to `crs=EPSG:3857` (Web Mercator)'\n    )\n    crs = 'EPSG:3857'\n  }\n  return { levels, maxZoom, tileSize, crs }\n}\n\n/**\n * Given a selector, generates an Object mapping each bandName to an Object\n * representing which values of each dimension that bandName represents.\n * @param {selector} Object of {[dimension]: dimensionValue|Array<dimensionValue>} pairs\n * @returns Object containing bandName, {[dimension]: dimensionValue} pairs\n */\nexport const getBandInformation = (selector) => {\n  const combinedBands = Object.keys(selector)\n    .filter((key) => Array.isArray(selector[key]))\n    .reduce((bandMapping, selectorKey) => {\n      const values = selector[selectorKey]\n      let keys\n      if (typeof values[0] === 'string') {\n        keys = values\n      } else {\n        keys = values.map((d) => selectorKey + '_' + d)\n      }\n\n      const bands = Object.keys(bandMapping)\n      const updatedBands = {}\n      keys.forEach((key, i) => {\n        if (bands.length > 0) {\n          bands.forEach((band) => {\n            const bandKey = `${band}_${key}`\n            updatedBands[bandKey] = {\n              ...bandMapping[band],\n              [selectorKey]: values[i],\n            }\n          })\n        } else {\n          updatedBands[key] = { [selectorKey]: values[i] }\n        }\n      })\n\n      return updatedBands\n    }, {})\n\n  Object.keys(selector).forEach((key) => {\n    if (!Array.isArray(selector[key])) {\n      Object.keys(combinedBands).forEach((combinedKey) => {\n        combinedBands[combinedKey][key] = selector[key]\n      })\n    }\n  })\n  return combinedBands\n}\n\nexport const getBands = (variable, selector = {}) => {\n  const bandInfo = getBandInformation(selector)\n  const bandNames = Object.keys(bandInfo)\n\n  if (bandNames.length > 0) {\n    return bandNames\n  } else {\n    return [variable]\n  }\n}\n\n/**\n * Mutates a given object by adding `value` to array at nested location specified by `keys`\n * @param {obj} Object of any structure\n * @param {Array<string>} keys describing nested location where value should be set\n * @param {any} value to be added to array at location specified by keys\n * @returns reference to updated obj\n */\nexport const setObjectValues = (obj, keys, value) => {\n  let ref = obj\n  keys.forEach((key, i) => {\n    if (i === keys.length - 1) {\n      if (!ref[key]) {\n        ref[key] = []\n      }\n    } else {\n      if (!ref[key]) {\n        ref[key] = {}\n      }\n    }\n    ref = ref[key]\n  })\n\n  ref.push(value)\n  return obj\n}\n\nexport const getSelectorHash = (selector) => {\n  return JSON.stringify(selector)\n}\n\nexport const getChunks = (\n  selector,\n  dimensions,\n  coordinates,\n  shape,\n  chunks,\n  x,\n  y\n) => {\n  const chunkIndicesToUse = dimensions.map((dimension, i) => {\n    if (['x', 'lon'].includes(dimension)) {\n      return [x]\n    } else if (['y', 'lat'].includes(dimension)) {\n      return [y]\n    }\n\n    const selectorValue = selector[dimension]\n    const coords = coordinates[dimension]\n    const chunkSize = chunks[i]\n    let indices\n    if (Array.isArray(selectorValue)) {\n      // Return all indices of selector value when array\n      indices = selectorValue.map((v) => coords.indexOf(v))\n    } else if (selectorValue != undefined) {\n      // Return index of single selector value otherwise when present\n      indices = [coords.indexOf(selectorValue)]\n    } else {\n      // Otherwise, vary over the entire shape of the dimension\n      indices = Array(shape[i])\n        .fill(null)\n        .map((_, j) => j)\n    }\n\n    return (\n      indices\n        .map((index) => Math.floor(index / chunkSize))\n        // Filter out repeated instances of indices\n        .filter((v, i, a) => a.indexOf(v) === i)\n    )\n  })\n\n  let result = [[]]\n  chunkIndicesToUse.forEach((indices) => {\n    const updatedResult = []\n    indices.forEach((index) => {\n      result.forEach((prev) => {\n        updatedResult.push([...prev, index])\n      })\n    })\n    result = updatedResult\n  })\n\n  return result\n}\n\nexport const getPositions = (size, mode) => {\n  let position = []\n  if (mode === 'grid' || mode === 'dotgrid') {\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        position.push([j + 0.5, i + 0.5])\n      }\n    }\n  }\n  if (mode === 'texture') {\n    position = [\n      0.0,\n      0.0,\n      0.0,\n      size,\n      size,\n      0.0,\n      size,\n      0.0,\n      0.0,\n      size,\n      size,\n      size,\n    ]\n  }\n  return position\n}\n\nexport const updatePaintProperty = (map, ref, key, value) => {\n  const { current: id } = ref\n  if (map.getLayer(id)) {\n    map.setPaintProperty(id, key, value)\n  }\n}\n","// mirrors https://github.com/carbonplan/ndpyramid/blob/41f2bedeb3297db7e299285ca43363f9c0c1a65e/ndpyramid/utils.py#L14-L25\nexport const DEFAULT_FILL_VALUES = {\n  '|S1': '\\x00',\n  '<i1': -127,\n  '|u1': 255,\n  '<i2': -32767,\n  '<u2': 65535,\n  '<i4': -2147483647,\n  '<u4': 4294967295,\n  // '<i8': -9223372036854775806,\n  '<u8': 18446744073709551614,\n  '<f4': 9.969209968386869e36,\n  '<f8': 9.969209968386869e36,\n}\n","import {\n  getBandInformation,\n  getChunks,\n  keyToTile,\n  getSelectorHash,\n} from './utils'\n\nclass Tile {\n  constructor({\n    key,\n    loader,\n    shape,\n    chunks,\n    dimensions,\n    coordinates,\n    bands,\n    initializeBuffer,\n  }) {\n    this.key = key\n    this.tileCoordinates = keyToTile(key)\n\n    this.shape = shape\n    this.chunks = chunks\n    this.dimensions = dimensions\n    this.coordinates = coordinates\n    this.bands = bands\n\n    this._bufferCache = null\n    this._buffers = {}\n\n    this._loading = {}\n    this._ready = {}\n\n    bands.forEach((k) => {\n      this._buffers[k] = initializeBuffer()\n    })\n\n    this.chunkedData = {}\n\n    this._loader = loader\n  }\n\n  getBuffers() {\n    return this._buffers\n  }\n\n  async loadChunks(chunks) {\n    const updated = await Promise.all(\n      chunks.map(\n        (chunk) =>\n          new Promise((resolve) => {\n            const key = chunk.join('.')\n            if (this.chunkedData[key]) {\n              resolve(false)\n            } else {\n              this._loading[key] = true\n              this._ready[key] = new Promise((innerResolve) => {\n                this._loader(chunk, (err, data) => {\n                  this.chunkedData[key] = data\n                  this._loading[key] = false\n                  innerResolve(true)\n                  resolve(true)\n                })\n              })\n            }\n          })\n      )\n    )\n\n    return updated.some(Boolean)\n  }\n\n  async populateBuffers(chunks, selector) {\n    const updated = await this.loadChunks(chunks)\n\n    this.populateBuffersSync(selector)\n\n    return updated\n  }\n\n  populateBuffersSync(selector) {\n    const bandInformation = getBandInformation(selector)\n\n    this.bands.forEach((band) => {\n      const info = bandInformation[band] || selector\n      const chunks = getChunks(\n        info,\n        this.dimensions,\n        this.coordinates,\n        this.shape,\n        this.chunks,\n        this.tileCoordinates[0],\n        this.tileCoordinates[1]\n      )\n\n      if (chunks.length !== 1) {\n        throw new Error(\n          `Expected 1 chunk for band '${band}', found ${\n            chunks.length\n          }: ${chunks.join(', ')}`\n        )\n      }\n      const chunk = chunks[0]\n      const chunkKey = chunk.join('.')\n      const data = this.chunkedData[chunkKey]\n\n      if (!data) {\n        throw new Error(`Missing data for chunk: ${chunkKey}`)\n      }\n\n      let bandData = data\n      if (info) {\n        const indices = this.dimensions\n          .map((d) => (['x', 'y'].includes(d) ? null : d))\n          .map((d, i) => {\n            if (info[d] === undefined) {\n              return null\n            } else {\n              const value = info[d]\n              return (\n                this.coordinates[d].findIndex(\n                  (coordinate) => coordinate === value\n                ) % this.chunks[i]\n              )\n            }\n          })\n\n        bandData = data.pick(...indices)\n      }\n\n      if (bandData.dimension !== 2) {\n        throw new Error(\n          `Unexpected data dimensions for band: ${band}. Found ${bandData.dimension}, expected 2. Check the selector value.`\n        )\n      }\n      this._buffers[band](bandData)\n    })\n\n    this._bufferCache = getSelectorHash(selector)\n  }\n\n  isBufferPopulated() {\n    return !!this._bufferCache\n  }\n\n  isLoading() {\n    return Object.keys(this._loading).some((key) => this._loading[key])\n  }\n\n  isLoadingChunks(chunks) {\n    return chunks.every((chunk) => this._loading[chunk.join('.')])\n  }\n\n  async chunksLoaded(chunks) {\n    await Promise.all(chunks.map((chunk) => this._ready[chunk.join('.')]))\n\n    return true\n  }\n\n  hasLoadedChunks(chunks) {\n    return chunks.every((chunk) => this.chunkedData[chunk.join('.')])\n  }\n\n  hasPopulatedBuffer(selector) {\n    return (\n      !!this._bufferCache && this._bufferCache === getSelectorHash(selector)\n    )\n  }\n\n  getPointValues({ selector, point: [x, y] }) {\n    const result = []\n    const chunks = getChunks(\n      selector,\n      this.dimensions,\n      this.coordinates,\n      this.shape,\n      this.chunks,\n      this.tileCoordinates[0],\n      this.tileCoordinates[1]\n    )\n\n    chunks.forEach((chunk) => {\n      const key = chunk.join('.')\n      const chunkData = this.chunkedData[key]\n\n      if (!chunkData) {\n        throw new Error(`Missing data for chunk: ${key}`)\n      }\n\n      const combinedIndices = this.chunks.reduce(\n        (accum, count, i) => {\n          const dimension = this.dimensions[i]\n          const chunkOffset = chunk[i] * count\n\n          if (['x', 'lon'].includes(dimension)) {\n            return accum.map((prev) => [...prev, x])\n          } else if (['y', 'lat'].includes(dimension)) {\n            return accum.map((prev) => [...prev, y])\n          } else if (selector.hasOwnProperty(dimension)) {\n            const selectorValues = Array.isArray(selector[dimension])\n              ? selector[dimension]\n              : [selector[dimension]]\n            const selectorIndices = selectorValues\n              .map((value) => this.coordinates[dimension].indexOf(value))\n              .filter(\n                (index) => chunkOffset <= index && index < chunkOffset + count\n              )\n\n            return selectorIndices.reduce((a, index) => {\n              return a.concat(accum.map((prev) => [...prev, index]))\n            }, [])\n          } else {\n            let updatedAccum = []\n\n            for (let j = 0; j < count; j++) {\n              const index = chunkOffset + j\n              updatedAccum = updatedAccum.concat(\n                accum.map((prev) => [...prev, index])\n              )\n            }\n\n            return updatedAccum\n          }\n        },\n        [[]]\n      )\n\n      combinedIndices.forEach((indices) => {\n        const keys = indices.reduce((accum, el, i) => {\n          const coordinates = this.coordinates[this.dimensions[i]]\n          const selectorValue = selector[this.dimensions[i]]\n\n          if (\n            coordinates &&\n            (Array.isArray(selectorValue) || selectorValue == undefined)\n          ) {\n            accum.push(coordinates[el])\n          }\n\n          return accum\n        }, [])\n        const chunkIndices = indices.map((el, i) =>\n          ['x', 'lon', 'y', 'lat'].includes(this.dimensions[i])\n            ? el\n            : el - chunk[i] * this.chunks[i]\n        )\n        result.push({\n          keys,\n          value: chunkData.get(...chunkIndices),\n        })\n      })\n    })\n\n    return result\n  }\n}\n\nexport default Tile\n","import zarr from 'zarr-js'\n\nimport { getPyramidMetadata } from './utils'\n\nconst initializeStore = async (source, version, variable, coordinateKeys) => {\n  let metadata\n  let loaders\n  let dimensions\n  let shape\n  let chunks\n  let fill_value\n  let dtype\n  let levels, maxZoom, tileSize, crs\n  const coordinates = {}\n  switch (version) {\n    case 'v2':\n      await new Promise((resolve) =>\n        zarr(window.fetch, version).openGroup(source, (err, l, m) => {\n          loaders = l\n          metadata = m\n          resolve()\n        })\n      )\n      ;({ levels, maxZoom, tileSize, crs } = getPyramidMetadata(\n        metadata.metadata['.zattrs'].multiscales\n      ))\n\n      const zattrs = metadata.metadata[`${levels[0]}/${variable}/.zattrs`]\n      const zarray = metadata.metadata[`${levels[0]}/${variable}/.zarray`]\n      dimensions = zattrs['_ARRAY_DIMENSIONS']\n      shape = zarray.shape\n      chunks = zarray.chunks\n      fill_value = zarray.fill_value\n      dtype = zarray.dtype\n\n      await Promise.all(\n        coordinateKeys.map(\n          (key) =>\n            new Promise((resolve) => {\n              loaders[`${levels[0]}/${key}`]([0], (err, chunk) => {\n                coordinates[key] = Array.from(chunk.data)\n                resolve()\n              })\n            })\n        )\n      )\n\n      break\n    case 'v3':\n      metadata = await fetch(`${source}/zarr.json`).then((res) => res.json())\n      ;({ levels, maxZoom, tileSize, crs } = getPyramidMetadata(\n        metadata.attributes.multiscales\n      ))\n\n      const arrayMetadata = await fetch(\n        `${source}/${levels[0]}/${variable}/zarr.json`\n      ).then((res) => res.json())\n\n      dimensions = arrayMetadata.attributes['_ARRAY_DIMENSIONS']\n      shape = arrayMetadata.shape\n      const isSharded = arrayMetadata.codecs[0].name == 'sharding_indexed'\n      chunks = isSharded\n        ? arrayMetadata.codecs[0].configuration.chunk_shape\n        : arrayMetadata.chunk_grid.configuration.chunk_shape\n      fill_value = arrayMetadata.fill_value\n      // dtype = arrayMetadata.data_type\n\n      loaders = {}\n      await Promise.all([\n        ...levels.map(\n          (level) =>\n            new Promise((resolve) => {\n              zarr(window.fetch, version).open(\n                `${source}/${level}/${variable}`,\n                (err, get) => {\n                  loaders[`${level}/${variable}`] = get\n                  resolve()\n                },\n                level === 0 ? arrayMetadata : null\n              )\n            })\n        ),\n        ...coordinateKeys.map(\n          (key) =>\n            new Promise((resolve) => {\n              zarr(window.fetch, version).open(\n                `${source}/${levels[0]}/${key}`,\n                (err, get) => {\n                  get([0], (err, chunk) => {\n                    coordinates[key] = Array.from(chunk.data)\n                    resolve()\n                  })\n                }\n              )\n            })\n        ),\n      ])\n      break\n    default:\n      throw new Error(\n        `Unexpected Zarr version: ${version}. Must be one of 'v1', 'v2'.`\n      )\n  }\n\n  return {\n    metadata,\n    loaders,\n    dimensions,\n    shape,\n    chunks,\n    fill_value,\n    dtype,\n    coordinates,\n    levels,\n    maxZoom,\n    tileSize,\n    crs,\n  }\n}\n\nexport default initializeStore\n","import ndarray from 'ndarray'\nimport { distance } from '@turf/turf'\n\nimport { vert, frag } from './shaders'\nimport {\n  zoomToLevel,\n  keyToTile,\n  pointToCamera,\n  pointToTile,\n  getPositions,\n  getSiblings,\n  getKeysToRender,\n  getAdjustedOffset,\n  getOverlappingAncestor,\n  cameraToPoint,\n  getTilesOfRegion,\n  getBands,\n  setObjectValues,\n  getChunks,\n  getSelectorHash,\n  mercatorYFromLat,\n} from './utils'\nimport { DEFAULT_FILL_VALUES } from './constants'\nimport Tile from './tile'\nimport initializeStore from './initialize-store'\n\nexport const createTiles = (regl, opts) => {\n  return new Tiles(opts)\n\n  function Tiles({\n    source,\n    colormap,\n    clim,\n    opacity,\n    display,\n    variable,\n    selector = {},\n    uniforms: customUniforms = {},\n    frag: customFrag,\n    fillValue,\n    mode = 'texture',\n    setLoading,\n    clearLoading,\n    invalidate,\n    invalidateRegion,\n    setMetadata,\n    order,\n    version = 'v2',\n    projection,\n  }) {\n    this.tiles = {}\n    this.loaders = {}\n    this.active = {}\n    this.display = display\n    this.clim = clim\n    this.opacity = opacity\n    this.selector = selector\n    this.variable = variable\n    this.fillValue = fillValue\n    this.order = order ?? [1, 1]\n    this.invalidate = invalidate\n    this.viewport = { viewportHeight: 0, viewportWidth: 0 }\n    this._loading = false\n    this.setLoading = setLoading\n    this.clearLoading = clearLoading\n\n    this.colormap = regl.texture({\n      data: colormap,\n      format: 'rgb',\n      shape: [colormap.length, 1],\n    })\n\n    const validModes = ['grid', 'dotgrid', 'texture']\n    if (!validModes.includes(mode)) {\n      throw Error(\n        `mode '${mode}' invalid, must be one of ${validModes.join(', ')}`\n      )\n    }\n\n    this.bands = getBands(variable, selector)\n\n    customUniforms = Object.keys(customUniforms)\n\n    let primitive,\n      initialize,\n      attributes = {},\n      uniforms = {}\n\n    if (mode === 'grid' || mode === 'dotgrid') {\n      primitive = 'points'\n      initialize = () => regl.buffer()\n      this.bands.forEach((k) => (attributes[k] = regl.prop(k)))\n      uniforms = {}\n    }\n\n    if (mode === 'texture') {\n      primitive = 'triangles'\n      this.bands.forEach((k) => (uniforms[k] = regl.prop(k)))\n    }\n\n    customUniforms.forEach((k) => (uniforms[k] = regl.this(k)))\n\n    this.cameraInitialized = new Promise((resolve) => {\n      let shouldResolve = true\n      this._resolveCameraInitialized = () => {\n        if (shouldResolve) {\n          resolve()\n          shouldResolve = false\n        }\n      }\n    })\n    this.initialized = new Promise((resolve) => {\n      const loadingID = this.setLoading('metadata')\n      initializeStore(source, version, variable, Object.keys(selector)).then(\n        ({\n          metadata,\n          loaders,\n          dimensions,\n          shape,\n          chunks,\n          fill_value,\n          dtype,\n          coordinates,\n          levels,\n          maxZoom,\n          tileSize,\n          crs,\n        }) => {\n          if (setMetadata) setMetadata(metadata)\n          this.maxZoom = maxZoom\n          this.level = zoomToLevel(this.zoom, maxZoom)\n          const position = getPositions(tileSize, mode)\n          this.position = regl.buffer(position)\n          this.size = tileSize\n          // Respect `projection` prop when provided, otherwise rely on `crs` value from metadata\n          this.projectionIndex = projection\n            ? ['mercator', 'equirectangular'].indexOf(projection)\n            : ['EPSG:3857', 'EPSG:4326'].indexOf(crs)\n          this.projection = ['mercator', 'equirectangular'][\n            this.projectionIndex\n          ]\n\n          if (!this.projection) {\n            this.projection = null\n            throw new Error(\n              projection\n                ? `Unexpected \\`projection\\` prop provided: '${projection}'. Must be one of 'mercator', 'equirectangular'.`\n                : `Unexpected \\`crs\\` found in metadata: '${crs}'. Must be one of 'EPSG:3857', 'EPSG:4326'.`\n            )\n          }\n\n          if (mode === 'grid' || mode === 'dotgrid') {\n            this.count = position.length\n          }\n          if (mode === 'texture') {\n            this.count = 6\n          }\n\n          this.dimensions = dimensions\n          this.shape = shape\n          this.chunks = chunks\n          this.fillValue = fillValue ?? fill_value ?? DEFAULT_FILL_VALUES[dtype]\n\n          if (mode === 'texture') {\n            const emptyTexture = ndarray(\n              new Float32Array(Array(1).fill(this.fillValue)),\n              [1, 1]\n            )\n            initialize = () => regl.texture(emptyTexture)\n          }\n\n          this.ndim = this.dimensions.length\n\n          this.coordinates = coordinates\n\n          levels.forEach((z) => {\n            const loader = loaders[z + '/' + variable]\n            this.loaders[z] = loader\n            Array(Math.pow(2, z))\n              .fill(0)\n              .map((_, x) => {\n                Array(Math.pow(2, z))\n                  .fill(0)\n                  .map((_, y) => {\n                    const key = [x, y, z].join(',')\n                    this.tiles[key] = new Tile({\n                      key,\n                      loader,\n                      shape: this.shape,\n                      chunks: this.chunks,\n                      dimensions: this.dimensions,\n                      coordinates: this.coordinates,\n                      bands: this.bands,\n                      initializeBuffer: initialize,\n                    })\n                  })\n              })\n          })\n\n          resolve(true)\n          this.clearLoading(loadingID)\n          this.invalidate()\n        }\n      )\n    })\n\n    this.drawTiles = regl({\n      vert: vert(mode, this.bands),\n\n      frag: frag(mode, this.bands, customFrag, customUniforms),\n\n      attributes: {\n        position: regl.this('position'),\n        ...attributes,\n      },\n\n      uniforms: {\n        viewportWidth: regl.context('viewportWidth'),\n        viewportHeight: regl.context('viewportHeight'),\n        pixelRatio: regl.context('pixelRatio'),\n        colormap: regl.this('colormap'),\n        camera: regl.this('camera'),\n        centerY: regl.this('centerY'),\n        size: regl.this('size'),\n        zoom: regl.this('zoom'),\n        projection: regl.this('projectionIndex'),\n        globalLevel: regl.this('level'),\n        level: regl.prop('level'),\n        offset: regl.prop('offset'),\n        order: regl.this('order'),\n        clim: regl.this('clim'),\n        opacity: regl.this('opacity'),\n        fillValue: regl.this('fillValue'),\n        ...uniforms,\n      },\n\n      blend: {\n        enable: true,\n        func: {\n          src: 'one',\n          srcAlpha: 'one',\n          dstRGB: 'one minus src alpha',\n          dstAlpha: 'one minus src alpha',\n        },\n      },\n\n      depth: { enable: false },\n\n      count: regl.this('count'),\n\n      primitive: primitive,\n    })\n\n    this.getProps = () => {\n      const adjustedActive = Object.keys(this.tiles)\n        .filter((key) => this.active[key])\n        .reduce((accum, key) => {\n          // Get optimum set of keys to render based on which have been fully loaded\n          // (potentially mixing levels of pyramid)\n          const keysToRender = getKeysToRender(key, this.tiles, this.maxZoom)\n          keysToRender.forEach((keyToRender) => {\n            const offsets = this.active[key]\n\n            offsets.forEach((offset) => {\n              const adjustedOffset = getAdjustedOffset(offset, keyToRender)\n              if (!accum[keyToRender]) {\n                accum[keyToRender] = []\n              }\n\n              const alreadySeenOffset = accum[keyToRender].find(\n                (prev) =>\n                  prev[0] === adjustedOffset[0] && prev[1] === adjustedOffset[1]\n              )\n              if (!alreadySeenOffset) {\n                accum[keyToRender].push(adjustedOffset)\n              }\n            })\n          })\n\n          return accum\n        }, {})\n\n      const activeKeys = Object.keys(adjustedActive)\n\n      return activeKeys.reduce((accum, key) => {\n        if (!getOverlappingAncestor(key, activeKeys)) {\n          const [, , level] = keyToTile(key)\n          const tile = this.tiles[key]\n          const offsets = adjustedActive[key]\n\n          offsets.forEach((offset) => {\n            accum.push({\n              ...tile.getBuffers(),\n              level,\n              offset,\n            })\n          })\n        }\n\n        return accum\n      }, [])\n    }\n\n    regl.frame(({ viewportHeight, viewportWidth }) => {\n      if (\n        this.viewport.viewportHeight !== viewportHeight ||\n        this.viewport.viewportWidth !== viewportWidth\n      ) {\n        this.viewport = { viewportHeight, viewportWidth }\n        this.invalidate()\n      }\n    })\n\n    this.draw = () => {\n      this.drawTiles(this.getProps())\n    }\n\n    this.updateCamera = ({ center, zoom }) => {\n      // Return early if projection not yet initialized\n      if (!this.projection) {\n        return\n      }\n\n      const level = zoomToLevel(zoom, this.maxZoom)\n      const tile = pointToTile(\n        center.lng,\n        center.lat,\n        level,\n        this.projection,\n        this.order\n      )\n      const camera = pointToCamera(center.lng, center.lat, level)\n\n      this.level = level\n      this.zoom = zoom\n      this.camera = [camera[0], camera[1]]\n      this.centerY = mercatorYFromLat(center.lat)\n\n      this.active = getSiblings(tile, {\n        viewport: this.viewport,\n        zoom,\n        camera: this.camera,\n        size: this.size,\n        order: this.order,\n        projection: this.projection,\n      })\n\n      this._resolveCameraInitialized()\n\n      if (this.size && Object.keys(this.active).length === 0) {\n        this.clearLoading(null, { forceClear: true })\n      }\n\n      Promise.all(\n        Object.keys(this.active).map(\n          (key) =>\n            new Promise((resolve) => {\n              if (this.loaders[level]) {\n                const tileIndex = keyToTile(key)\n                const tile = this.tiles[key]\n\n                const chunks = getChunks(\n                  this.selector,\n                  this.dimensions,\n                  this.coordinates,\n                  this.shape,\n                  this.chunks,\n                  tileIndex[0],\n                  tileIndex[1]\n                )\n                const initialHash = getSelectorHash(this.selector)\n\n                if (tile.hasPopulatedBuffer(this.selector)) {\n                  resolve(false)\n                  return\n                }\n\n                if (tile.isLoadingChunks(chunks)) {\n                  // If tile is already loading all chunks...\n                  tile.chunksLoaded(chunks).then(() => {\n                    // ...wait for ready state and populate buffers if selector is still relevant.\n                    if (initialHash === getSelectorHash(this.selector)) {\n                      tile.populateBuffersSync(this.selector)\n                      this.invalidate()\n                      resolve(false)\n                    } else {\n                      resolve(false)\n                    }\n                  })\n                } else {\n                  // Otherwise, immediately kick off fetch or populate buffers.\n                  if (tile.hasLoadedChunks(chunks)) {\n                    tile.populateBuffersSync(this.selector)\n                    this.invalidate()\n                    resolve(false)\n                  } else {\n                    const loadingID = this.setLoading('chunk')\n                    tile\n                      .populateBuffers(chunks, this.selector)\n                      .then((dataUpdated) => {\n                        this.invalidate()\n                        resolve(dataUpdated)\n                        this.clearLoading(loadingID)\n                      })\n                  }\n                }\n              }\n            })\n        )\n      ).then((results) => {\n        if (results.some(Boolean)) {\n          invalidateRegion()\n        }\n      })\n    }\n\n    this.queryRegion = async (region, selector) => {\n      await Promise.all([this.initialized, this.cameraInitialized])\n\n      const tiles = getTilesOfRegion(\n        region,\n        this.level,\n        this.projection,\n        this.order\n      )\n\n      await Promise.all(\n        tiles.map(async (key) => {\n          const tileIndex = keyToTile(key)\n          const chunks = getChunks(\n            selector,\n            this.dimensions,\n            this.coordinates,\n            this.shape,\n            this.chunks,\n            tileIndex[0],\n            tileIndex[1]\n          )\n\n          if (!this.tiles[key].hasLoadedChunks(chunks)) {\n            const loadingID = this.setLoading('chunk')\n            await this.tiles[key].loadChunks(chunks)\n            this.clearLoading(loadingID)\n          }\n        })\n      )\n\n      let results,\n        lat = [],\n        lon = []\n      const resultDim =\n        this.ndim -\n        Object.keys(selector).filter((k) => !Array.isArray(selector[k])).length\n      if (resultDim > 2) {\n        results = {}\n      } else {\n        results = []\n      }\n\n      tiles.map((key) => {\n        const [x, y, z] = keyToTile(key)\n        const z2 = Math.pow(2, z)\n        const sizeDeg = 180 / z2\n        const stepDeg = sizeDeg / this.size\n\n        const lat0 = this.order[1] * (90 - y * sizeDeg)\n\n        const { center, radius, units } = region.properties\n        for (let i = 0; i < this.size; i++) {\n          for (let j = 0; j < this.size; j++) {\n            const [mercLon, mercLat] = cameraToPoint(\n              x + i / this.size,\n              y + j / this.size,\n              z\n            )\n            const pointCoords = [\n              mercLon,\n              this.projection === 'equirectangular'\n                ? lat0 - this.order[1] * stepDeg * j\n                : mercLat,\n            ]\n            const distanceToCenter = distance(\n              [center.lng, center.lat],\n              pointCoords,\n              {\n                units,\n              }\n            )\n            if (distanceToCenter < radius) {\n              lon.push(pointCoords[0])\n              lat.push(pointCoords[1])\n\n              const valuesToSet = this.tiles[key].getPointValues({\n                selector,\n                point: [i, j],\n              })\n\n              valuesToSet.forEach(({ keys, value }) => {\n                if (keys.length > 0) {\n                  setObjectValues(results, keys, value)\n                } else {\n                  results.push(value)\n                }\n              })\n            }\n          }\n        }\n      })\n\n      const out = { [this.variable]: results }\n\n      if (this.ndim > 2) {\n        out.dimensions = this.dimensions.map((d) => {\n          if (['x', 'lon'].includes(d)) {\n            return 'lon'\n          } else if (['y', 'lat'].includes(d)) {\n            return 'lat'\n          } else {\n            return d\n          }\n        })\n\n        out.coordinates = this.dimensions.reduce(\n          (coords, d) => {\n            if (!['x', 'lon', 'y', 'lat'].includes(d)) {\n              if (selector.hasOwnProperty(d)) {\n                coords[d] = Array.isArray(selector[d])\n                  ? selector[d]\n                  : [selector[d]]\n              } else {\n                coords[d] = this.coordinates[d]\n              }\n            }\n\n            return coords\n          },\n          { lat, lon }\n        )\n      } else {\n        out.dimensions = ['lat', 'lon']\n        out.coordinates = { lat, lon }\n      }\n\n      return out\n    }\n\n    this.updateSelector = ({ selector }) => {\n      this.selector = selector\n      this.invalidate()\n    }\n\n    this.updateUniforms = (props) => {\n      Object.keys(props).forEach((k) => {\n        this[k] = props[k]\n      })\n      if (!this.display) {\n        this.opacity = 0\n      }\n      this.invalidate()\n    }\n\n    this.updateColormap = ({ colormap }) => {\n      this.colormap = regl.texture({\n        data: colormap,\n        format: 'rgb',\n        shape: [colormap.length, 1],\n      })\n      this.invalidate()\n    }\n  }\n}\n","import React, { useRef, useEffect, useState } from 'react'\nimport { useRegl } from './regl'\nimport { useMapbox } from './mapbox'\nimport { useControls } from './use-controls'\nimport { createTiles } from './tiles'\nimport { useRegion } from './region/context'\nimport { useSetLoading } from './loading'\n\nconst Raster = (props) => {\n  const {\n    display = true,\n    opacity = 1,\n    clim,\n    colormap,\n    index = 0,\n    regionOptions = {},\n    selector = {},\n    uniforms = {},\n  } = props\n  const { center, zoom } = useControls()\n  const [regionDataInvalidated, setRegionDataInvalidated] = useState(\n    new Date().getTime()\n  )\n  const { regl } = useRegl()\n  const { map } = useMapbox()\n  const { region } = useRegion()\n  const { setLoading, clearLoading, loading, chunkLoading, metadataLoading } =\n    useSetLoading()\n  const tiles = useRef()\n  const camera = useRef()\n  const lastQueried = useRef()\n\n  camera.current = { center: center, zoom: zoom }\n\n  const queryRegion = async (r, s) => {\n    const queryStart = new Date().getTime()\n    lastQueried.current = queryStart\n\n    regionOptions.setData({ value: null })\n\n    const data = await tiles.current.queryRegion(r, s)\n\n    // Invoke callback as long as a more recent query has not already been initiated\n    if (lastQueried.current === queryStart) {\n      regionOptions.setData({ value: data })\n    }\n  }\n\n  useEffect(() => {\n    tiles.current = createTiles(regl, {\n      ...props,\n      setLoading,\n      clearLoading,\n      invalidate: () => {\n        map.triggerRepaint()\n      },\n      invalidateRegion: () => {\n        setRegionDataInvalidated(new Date().getTime())\n      },\n    })\n  }, [])\n\n  useEffect(() => {\n    if (props.setLoading) {\n      props.setLoading(loading)\n    }\n  }, [!!props.setLoading, loading])\n  useEffect(() => {\n    if (props.setMetadataLoading) {\n      props.setMetadataLoading(metadataLoading)\n    }\n  }, [!!props.setMetadataLoading, metadataLoading])\n  useEffect(() => {\n    if (props.setChunkLoading) {\n      props.setChunkLoading(chunkLoading)\n    }\n  }, [!!props.setChunkLoading, chunkLoading])\n\n  useEffect(() => {\n    const callback = () => {\n      if (Object.values(camera.current).some(Boolean)) {\n        tiles.current.updateCamera(camera.current)\n        tiles.current.draw()\n      }\n    }\n    map.on('render', callback)\n\n    return () => {\n      regl.clear({\n        color: [0, 0, 0, 0],\n        depth: 1,\n      })\n      map.off('render', callback)\n      map.triggerRepaint()\n    }\n  }, [index])\n\n  useEffect(() => {\n    tiles.current.updateSelector({ selector })\n  }, Object.values(selector))\n\n  useEffect(() => {\n    tiles.current.updateUniforms({ display, opacity, clim, ...uniforms })\n  }, [display, opacity, clim, ...Object.values(uniforms)])\n\n  useEffect(() => {\n    tiles.current.updateColormap({ colormap })\n  }, [colormap])\n\n  useEffect(() => {\n    if (region && regionOptions?.setData) {\n      queryRegion(region, regionOptions.selector || selector)\n    }\n  }, [\n    regionOptions?.setData,\n    region,\n    regionDataInvalidated,\n    ...Object.values(regionOptions?.selector || selector || {}),\n  ])\n\n  return null\n}\n\nexport default Raster\n","import { useEffect, useRef } from 'react'\nimport { useMapbox } from './mapbox'\nimport { updatePaintProperty } from './utils'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Line = ({\n  source,\n  variable,\n  color,\n  id,\n  maxZoom = 5,\n  opacity = 1,\n  blur = 0.4,\n  width = 0.5,\n}) => {\n  const { map } = useMapbox()\n  const removed = useRef(false)\n\n  const sourceIdRef = useRef()\n  const layerIdRef = useRef()\n\n  useEffect(() => {\n    map.on('remove', () => {\n      removed.current = true\n    })\n  }, [])\n\n  useEffect(() => {\n    sourceIdRef.current = id || uuidv4()\n    const { current: sourceId } = sourceIdRef\n    if (!map.getSource(sourceId)) {\n      map.addSource(sourceId, {\n        type: 'vector',\n        tiles: [`${source}/{z}/{x}/{y}.pbf`],\n      })\n      if (maxZoom) {\n        map.getSource(sourceId).maxzoom = maxZoom\n      }\n    }\n  }, [id])\n\n  useEffect(() => {\n    const layerId = layerIdRef.current || uuidv4()\n    layerIdRef.current = layerId\n    const { current: sourceId } = sourceIdRef\n    if (!map.getLayer(layerId)) {\n      map.addLayer({\n        id: layerId,\n        type: 'line',\n        source: sourceId,\n        'source-layer': variable,\n        layout: { visibility: 'visible' },\n        paint: {\n          'line-blur': blur,\n          'line-color': color,\n          'line-opacity': opacity,\n          'line-width': width,\n        },\n      })\n    }\n\n    return () => {\n      if (!removed.current) {\n        if (map.getLayer(layerId)) {\n          map.removeLayer(layerId)\n        }\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'line-color', color)\n  }, [color])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'line-opacity', opacity)\n  }, [opacity])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'line-width', width)\n  }, [width])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'line-blur', blur)\n  }, [blur])\n\n  return null\n}\n\nexport default Line\n","import { useEffect, useRef } from 'react'\nimport { useMapbox } from './mapbox'\nimport { updatePaintProperty } from './utils'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst Fill = ({ source, variable, color, id, maxZoom = 5, opacity = 1 }) => {\n  const { map } = useMapbox()\n  const removed = useRef(false)\n\n  const sourceIdRef = useRef()\n  const layerIdRef = useRef()\n\n  useEffect(() => {\n    map.on('remove', () => {\n      removed.current = true\n    })\n  }, [])\n\n  useEffect(() => {\n    sourceIdRef.current = id || uuidv4()\n    const { current: sourceId } = sourceIdRef\n    if (!map.getSource(sourceId)) {\n      map.addSource(sourceId, {\n        type: 'vector',\n        tiles: [`${source}/{z}/{x}/{y}.pbf`],\n      })\n      if (maxZoom) {\n        map.getSource(sourceId).maxzoom = maxZoom\n      }\n    }\n  }, [id])\n\n  useEffect(() => {\n    layerIdRef.current = uuidv4()\n    const { current: layerId } = layerIdRef\n    const { current: sourceId } = sourceIdRef\n    if (!map.getLayer(layerId)) {\n      map.addLayer({\n        id: layerId,\n        type: 'fill',\n        source: sourceId,\n        'source-layer': variable,\n        layout: { visibility: 'visible' },\n        paint: {\n          'fill-color': color,\n          'fill-opacity': opacity,\n        },\n      })\n    }\n\n    return () => {\n      if (!removed.current) {\n        if (map.getLayer(layerId)) {\n          map.removeLayer(layerId)\n        }\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'fill-color', color)\n  }, [color])\n\n  useEffect(() => {\n    updatePaintProperty(map, layerIdRef, 'fill-opacity', opacity)\n  }, [opacity])\n\n  return null\n}\n\nexport default Fill\n","import { useEffect } from 'react'\nimport { ticks } from 'd3-array'\nimport { axisBottom, axisLeft } from 'd3-axis'\nimport { scaleOrdinal } from 'd3-scale'\nimport { select } from 'd3-selection'\n\nimport { useMapbox } from './mapbox'\n\nconst TICK_SEPARATION = 150 // target distance between ticks\nconst TICK_SIZE = 6 // tick length\nconst TICK_MARGIN = 2 // distance between gridlines and tick text\n\nfunction useRuler({\n  showAxes = true,\n  showGrid = false,\n  fontFamily,\n  gridColor,\n}) {\n  const { map } = useMapbox()\n\n  useEffect(() => {\n    if (!showAxes && !showGrid) {\n      return\n    }\n\n    let rulerContainer = null\n    let setRulerTicks = null\n\n    function addRuler() {\n      const mapContainer = map.getContainer()\n      const height = mapContainer.offsetHeight\n      const width = mapContainer.offsetWidth\n      const numXTicks = width / TICK_SEPARATION\n      const numYTicks = height / TICK_SEPARATION\n\n      rulerContainer = select(mapContainer)\n        .append('svg')\n        .classed('ruler', true)\n        .attr('width', width)\n        .attr('height', height)\n        .style('position', 'absolute')\n        .style('top', 0)\n        .style('left', 0)\n        .style('pointer-events', 'none')\n\n      // x-axis\n      const gx = rulerContainer\n        .append('g')\n        .classed('ruler-axis', true)\n        .style('font-size', '14px')\n        .style('font-family', fontFamily)\n\n      const xAxis = (g, x) =>\n        g\n          .call(\n            axisBottom(x)\n              .tickValues(x.domain())\n              .tickFormat((d) => `${d}°`)\n              .tickSize(TICK_SIZE)\n          )\n          .call((g) => g.select('.domain').remove())\n\n      // y-axis\n      const gy = rulerContainer\n        .append('g')\n        .classed('ruler-axis', true)\n        .attr('transform', `translate(${width},0)`)\n        .style('font-size', '14px')\n        .style('font-family', fontFamily)\n\n      const yAxis = (g, y) =>\n        g\n          .call(\n            axisLeft(y)\n              .tickValues(y.domain())\n              .tickFormat((d) => `${d}°`)\n              .tickSize(TICK_SIZE)\n          )\n          .call((g) => g.select('.domain').remove())\n\n      // grid\n      const { gGrid, grid } = showGrid\n        ? {\n            gGrid: rulerContainer\n              .append('g')\n              .classed('ruler-grid', true)\n              .style('stroke', gridColor)\n              .style('stroke-dasharray', '3,2')\n              .style('stroke-opacity', 0.8),\n\n            grid: (g, x, y) => {\n              const xTickHeight = gx.node().getBoundingClientRect().height\n              const yTickNodes = gy.selectAll('.tick').nodes()\n              return g\n                .call((g) =>\n                  g\n                    .selectAll('.x')\n                    .data(x.domain())\n                    .join(\n                      (enter) =>\n                        enter\n                          .append('line')\n                          .classed('x', true)\n                          .attr('y1', xTickHeight + TICK_MARGIN)\n                          .attr('y2', height),\n                      (update) => update,\n                      (exit) => exit.remove()\n                    )\n                    .attr('x1', (d) => 0.5 + x(d))\n                    .attr('x2', (d) => 0.5 + x(d))\n                )\n                .call((g) =>\n                  g\n                    .selectAll('.y')\n                    .data(y.domain())\n                    .join(\n                      (enter) => enter.append('line').classed('y', true),\n                      (update) => update,\n                      (exit) => exit.remove()\n                    )\n                    .attr('y1', (d) => 0.5 + y(d))\n                    .attr('y2', (d) => 0.5 + y(d))\n                    .attr('x2', (d, i) => {\n                      const yTickWidth = yTickNodes[i]\n                        ? yTickNodes[i].getBoundingClientRect().width\n                        : 0\n                      return width - yTickWidth - TICK_MARGIN\n                    })\n                )\n            },\n          }\n        : {\n            gGrid: null,\n            grid: null,\n          }\n\n      // the important bit\n      setRulerTicks = () => {\n        const b = map.getBounds()\n\n        const xDomain = ticks(b.getWest(), b.getEast(), numXTicks)\n        const xRange = xDomain.map((lng) => map.project([lng, 0]).x)\n        const x = scaleOrdinal().domain(xDomain).range(xRange)\n\n        const yDomain = ticks(b.getNorth(), b.getSouth(), numYTicks)\n        const yRange = yDomain.map((lat) => map.project([0, lat]).y)\n        const y = scaleOrdinal().domain(yDomain).range(yRange)\n\n        if (showAxes) {\n          gx.call(xAxis, x)\n          gy.call(yAxis, y)\n        }\n        if (showGrid) {\n          gGrid.call(grid, x, y)\n        }\n      }\n\n      setRulerTicks()\n      map.on('move', setRulerTicks)\n    }\n\n    function removeRuler() {\n      if (rulerContainer) {\n        rulerContainer.remove()\n      }\n      if (setRulerTicks) {\n        map.off('move', setRulerTicks)\n      }\n    }\n\n    function resetRuler() {\n      removeRuler()\n      addRuler()\n    }\n\n    addRuler()\n    map.on('resize', resetRuler)\n\n    return function cleanup() {\n      removeRuler()\n      map.off('resize', resetRuler)\n    }\n  }, [showAxes, showGrid, fontFamily, gridColor])\n}\n\nexport default useRuler\n"],"names":["MapboxContext","createContext","useMapbox","useContext","Mapbox","glyphs","style","viewState","center","zoom","minZoom","maxZoom","maxBounds","debug","children","mapRef","onMove","onMoveStart","onMoveEnd","onViewStateChange","map","useRef","useState","ready","setReady","onViewStateChangeHandlerRef","initializeMap","useCallback","node","current","mapboxStyle","version","sources","layers","console","error","longitude","latitude","bearing","pitch","mapboxgl","Map","container","dragRotate","pitchWithRotate","touchZoomRotate","disableRotation","touchPitch","disable","showTileBoundaries","on","log","handler","getCenter","lng","lat","getZoom","getBearing","getPitch","useEffect","jumpTo","off","remove","React","top","bottom","position","width","GL_DEPTH_COMPONENT","GL_DEPTH_STENCIL","HALF_FLOAT_OES","gl2Extensions","WEBGL_depth_texture","UNSIGNED_INT_24_8_WEBGL","OES_element_index_uint","OES_texture_float","OES_texture_half_float","EXT_color_buffer_float","OES_standard_derivatives","EXT_frag_depth","EXT_blend_minmax","MIN_EXT","MAX_EXT","EXT_shader_texture_lod","extensions","webgl2Compat","overrideContextType","callback","webgl2","origGetContext","HTMLCanvasElement","prototype","getContext","ignoredContextType","contextAttributes","wrapGLContext","bind","rv","gl","versionProperty","p","toLowerCase","getExtension","origGetExtension","n","apply","origTexImage","texImage2D","target","miplevel","iformat","a","typeFor6","c","d","typeFor9","f","getInternalFormat","getFormat","getTextureType","arguments","length","ifmt","fmt","call","type","ArrayBuffer","isView","typedArray","FLOAT","Float32Array","UNSIGNED_BYTE","Uint8Array","UNSIGNED_SHORT","Uint16Array","Error","drawBuffersWEBGL","drawBuffers","VERTEX_ARRAY_BINDING_OES","createVertexArrayOES","createVertexArray","deleteVertexArrayOES","deleteVertexArray","isVertexArrayOES","isVertexArray","bindVertexArrayOES","bindVertexArray","VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE","drawArraysInstancedANGLE","drawArraysInstanced","drawElementsInstancedANGLE","drawElementsInstanced","vertexAttribDivisorANGLE","vertexAttribDivisor","format","DEPTH_COMPONENT24","DEPTH24_STENCIL8","RGBA","RGBA16F","RGB","RGB16F","RGBA32F","RGB32F","LUMINANCE","R32F","R8","HALF_FLOAT","RED","ReglContext","useRegl","Regl","reglRef","ref","requiredExtensions","canvas","document","createElement","context","missingExtensions","filter","ext","_regl","err","destroy","regl","height","RegionContext","region","onChange","useRegionContext","useRegion","RegionProvider","setRegion","LoadingContext","useSetLoading","loadingId","uuidv4","loading","dispatch","Set","metadataIds","setMetadataIds","chunkIds","setChunkIds","loaders","id","key","forEach","push","size","setLoading","includes","setter","prev","add","clearLoading","forceClear","prevMetadata","prevChunk","metadataLoading","chunkLoading","reducer","state","action","LoadingProvider","useReducer","metadata","chunk","useLoadingContext","LoadingUpdater","setMetadataLoading","setChunkLoading","tabIndex","className","overflow","pointerEvents","zIndex","project","coordinates","options","ll","LngLat","convert","result","referencePoint","deltas","delta","alternate","Math","abs","x","getPathMaker","transform","geoTransform","point","stream","y","geoPath","projection","CursorManager","getCanvas","originalStyle","cursor","mouseState","onHandle","draggingHandle","onCircle","draggingCircle","setCursor","newState","POLES","abbreviations","kilometers","miles","CircleRenderer","onIdle","circle","onDrag","initialCenter","initialRadius","maxRadius","minRadius","units","centerXY","radius","svg","select","svgCircle","svgCircleCutout","svgHandle","svgGuideline","svgRadiusTextContainer","svgRadiusText","attr","guidelineAngle","removers","addDragHandleListeners","onMouseMove","e","r","distance","unproject","toArray","min","max","setRadius","mouseXY","rise","run","angle","atan","PI","setCircle","onMouseUp","handleStart","dragPan","once","removeDragHandleListeners","addCircleListeners","offset","mapCanvas","setCenter","lngLat","enable","handleCircleStart","touch","touches","pageX","pageY","offsetX","offsetY","preventDefault","newEvent","constructor","dispatchEvent","removeCircleListeners","addMapMoveListeners","removeMapMoveListeners","geoCircle","inverted","turfCircle","steps","properties","area","convertArea","rewind","reverse","mutate","_center","_point","nearPoles","resetCenterXY","_radius","turfPoint","some","pole","makePath","path","cutoutCircle","cutoutPath","getBBox","handleXY","rhumbDestination","geometry","lineEnd","line","lineString","inter","lineIntersect","features","translateY","text","toFixed","translateX","textWidth","coeff","sin","CirclePicker","backgroundColor","color","fontFamily","fontSize","setRenderer","renderer","cleanup","loaded","left","getInitialRadius","bounds","getBounds","dist","round","isValidCoordinate","isNaN","getInitialCenter","Array","isArray","warn","RegionPicker","initialRadiusProp","initialCenterProp","handleCircle","undefined","useRecenterRegion","recenterRegion","value","setValue","easeTo","useControls","setZoom","updateControlsSync","flushSync","_sh","mode","which","vert","vars","sh","join","frag","customFrag","customUniforms","declarations","mercatorInvert","d2r","clip","v","keyToTile","split","parseInt","tileToKey","tile","pointToTile","lon","z","order","z2","pow","pointToCamera","floor","cameraToPoint","y2","exp","zoomToLevel","mercatorYFromLat","tan","getOffsets","tileSize","cameraOffset","siblingCount","next","ceil","getTileOffsets","camera","getLatBasedOffsets","sizeDeg","lat0","lat1","y0","y1","magnification","scale","window","devicePixelRatio","getSiblings","viewport","tileX","tileY","tileZ","viewportHeight","viewportWidth","cameraX","cameraY","deltaX","deltaY","offsets","reduce","accum","getKeysToRender","targetKey","tiles","ancestor","getAncestorToRender","descendants","getDescendantsToRender","isBufferPopulated","initialX","initialY","initialZ","coverage","keys","coveringKeys","currentCoverage","getOverlappingAncestor","renderedKeys","aX","aY","aZ","child","find","parentKey","bX","bY","bZ","parent","factor","getAdjustedOffset","renderedKey","renderedX","renderedY","renderedLevel","level","descendantFactor","getTilesOfRegion","centralTile","edgeTile","maxDiff","centerPoint","rhumbBearing","i","intermediatePoint","intermediateTile","from","getPyramidMetadata","multiscales","datasets","levels","dataset","Number","pixels_per_tile","crs","getBandInformation","selector","combinedBands","Object","bandMapping","selectorKey","values","bands","updatedBands","band","bandKey","combinedKey","getBands","variable","bandInfo","bandNames","setObjectValues","obj","getSelectorHash","JSON","stringify","getChunks","dimensions","shape","chunks","chunkIndicesToUse","dimension","selectorValue","coords","chunkSize","indices","indexOf","fill","_","j","index","updatedResult","getPositions","updatePaintProperty","getLayer","setPaintProperty","DEFAULT_FILL_VALUES","Tile","loader","initializeBuffer","tileCoordinates","_bufferCache","_buffers","_loading","_ready","k","chunkedData","_loader","getBuffers","loadChunks","Promise","all","resolve","innerResolve","data","updated","Boolean","populateBuffers","populateBuffersSync","bandInformation","info","chunkKey","bandData","findIndex","coordinate","pick","isLoading","isLoadingChunks","every","chunksLoaded","hasLoadedChunks","hasPopulatedBuffer","getPointValues","chunkData","combinedIndices","count","chunkOffset","hasOwnProperty","selectorValues","selectorIndices","concat","updatedAccum","el","chunkIndices","get","_settle","pact","s","_Pact","o","then","observer","initializeStore","source","coordinateKeys","fill_value","dtype","zarr","fetch","openGroup","l","m","zattrs","zarray","res","json","attributes","arrayMetadata","isSharded","codecs","name","configuration","chunk_shape","chunk_grid","open","onFulfilled","onRejected","_this","discriminant","cases","dispatchIndex","awaitBody","outer","test","testValue","body","fallthroughCheck","reject","_resumeAfterBody","_resumeAfterTest","createTiles","opts","Tiles","colormap","clim","opacity","display","uniforms","fillValue","invalidate","invalidateRegion","setMetadata","active","texture","validModes","primitive","initialize","buffer","prop","cameraInitialized","shouldResolve","_resolveCameraInitialized","initialized","loadingID","projectionIndex","emptyTexture","ndarray","ndim","drawTiles","pixelRatio","centerY","globalLevel","blend","func","src","srcAlpha","dstRGB","dstAlpha","depth","getProps","adjustedActive","keysToRender","keyToRender","adjustedOffset","alreadySeenOffset","activeKeys","frame","draw","updateCamera","tileIndex","initialHash","dataUpdated","results","queryRegion","resultDim","stepDeg","mercLon","mercLat","pointCoords","distanceToCenter","valuesToSet","out","updateSelector","updateUniforms","props","updateColormap","Raster","regionOptions","Date","getTime","regionDataInvalidated","setRegionDataInvalidated","lastQueried","queryStart","setData","triggerRepaint","clear","Line","blur","removed","sourceIdRef","layerIdRef","sourceId","getSource","addSource","maxzoom","layerId","addLayer","layout","visibility","paint","removeLayer","Fill","TICK_SEPARATION","TICK_SIZE","TICK_MARGIN","useRuler","showAxes","showGrid","gridColor","rulerContainer","setRulerTicks","addRuler","mapContainer","getContainer","offsetHeight","offsetWidth","numXTicks","numYTicks","append","classed","gx","xAxis","g","axisBottom","tickValues","domain","tickFormat","tickSize","gy","yAxis","axisLeft","gGrid","grid","xTickHeight","getBoundingClientRect","yTickNodes","selectAll","nodes","enter","update","exit","yTickWidth","b","xDomain","ticks","getWest","getEast","xRange","scaleOrdinal","range","yDomain","getNorth","getSouth","yRange","removeRuler","resetRuler"],"mappings":"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"}